//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("DataModel", "QuestionGroupQuestion", "QuestionGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ELearning.Data.QuestionGroup), "Question", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ELearning.Data.Question), true)]
[assembly: EdmRelationshipAttribute("DataModel", "QuestionGroupQuestionGroupType", "QuestionGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ELearning.Data.QuestionGroup), "QuestionGroupType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ELearning.Data.QuestionGroupType), true)]
[assembly: EdmRelationshipAttribute("DataModel", "Supervisor", "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ELearning.Data.Group), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ELearning.Data.User), true)]
[assembly: EdmRelationshipAttribute("DataModel", "GroupMembers", "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ELearning.Data.Group), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ELearning.Data.User))]
[assembly: EdmRelationshipAttribute("DataModel", "UserUserType", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ELearning.Data.User), "UserType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ELearning.Data.UserType), true)]
[assembly: EdmRelationshipAttribute("DataModel", "FormTemplateFormType", "FormTemplate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ELearning.Data.Form), "FormType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ELearning.Data.FormType), true)]
[assembly: EdmRelationshipAttribute("DataModel", "FormTemplateAuthor", "FormTemplate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ELearning.Data.Form), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ELearning.Data.User), true)]
[assembly: EdmRelationshipAttribute("DataModel", "QuestionGroupFormTemplate", "QuestionGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ELearning.Data.QuestionGroup), "FormTemplate", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ELearning.Data.Form), true)]
[assembly: EdmRelationshipAttribute("DataModel", "FormInstanceUser", "FormInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ELearning.Data.FormInstance), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ELearning.Data.User), true)]
[assembly: EdmRelationshipAttribute("DataModel", "FormInstanceFormTemplate", "FormInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ELearning.Data.FormInstance), "FormTemplate", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ELearning.Data.Form), true)]
[assembly: EdmRelationshipAttribute("DataModel", "QuestionInstanceQuestionTemplate", "QuestionInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ELearning.Data.QuestionInstance), "Question", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ELearning.Data.Question), true)]
[assembly: EdmRelationshipAttribute("DataModel", "FormInstanceQuestionInstance", "FormInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ELearning.Data.FormInstance), "QuestionInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ELearning.Data.QuestionInstance), true)]
[assembly: EdmRelationshipAttribute("DataModel", "FormInstanceFormInstanceEvaluation", "FormInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ELearning.Data.FormInstance), "FormInstanceEvaluation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ELearning.Data.FormInstanceEvaluation))]
[assembly: EdmRelationshipAttribute("DataModel", "QuestionInstanceAnswer", "QuestionInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ELearning.Data.QuestionInstance), "Answer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ELearning.Data.Answer))]
[assembly: EdmRelationshipAttribute("DataModel", "ChoiceQuestionChoiceItem", "ChoiceQuestion", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ELearning.Data.ChoiceQuestion), "ChoiceItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ELearning.Data.ChoiceItem), true)]

#endregion

namespace ELearning.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DataModelContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DataModelContainer object using the connection string found in the 'DataModelContainer' section of the application configuration file.
        /// </summary>
        public DataModelContainer() : base("name=DataModelContainer", "DataModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DataModelContainer object.
        /// </summary>
        public DataModelContainer(string connectionString) : base(connectionString, "DataModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DataModelContainer object.
        /// </summary>
        public DataModelContainer(EntityConnection connection) : base(connection, "DataModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Question> Question
        {
            get
            {
                if ((_Question == null))
                {
                    _Question = base.CreateObjectSet<Question>("Question");
                }
                return _Question;
            }
        }
        private ObjectSet<Question> _Question;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<QuestionGroup> QuestionGroup
        {
            get
            {
                if ((_QuestionGroup == null))
                {
                    _QuestionGroup = base.CreateObjectSet<QuestionGroup>("QuestionGroup");
                }
                return _QuestionGroup;
            }
        }
        private ObjectSet<QuestionGroup> _QuestionGroup;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<QuestionGroupType> QuestionGroupType
        {
            get
            {
                if ((_QuestionGroupType == null))
                {
                    _QuestionGroupType = base.CreateObjectSet<QuestionGroupType>("QuestionGroupType");
                }
                return _QuestionGroupType;
            }
        }
        private ObjectSet<QuestionGroupType> _QuestionGroupType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> User
        {
            get
            {
                if ((_User == null))
                {
                    _User = base.CreateObjectSet<User>("User");
                }
                return _User;
            }
        }
        private ObjectSet<User> _User;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Group> Group
        {
            get
            {
                if ((_Group == null))
                {
                    _Group = base.CreateObjectSet<Group>("Group");
                }
                return _Group;
            }
        }
        private ObjectSet<Group> _Group;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserType> UserType
        {
            get
            {
                if ((_UserType == null))
                {
                    _UserType = base.CreateObjectSet<UserType>("UserType");
                }
                return _UserType;
            }
        }
        private ObjectSet<UserType> _UserType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Form> Form
        {
            get
            {
                if ((_Form == null))
                {
                    _Form = base.CreateObjectSet<Form>("Form");
                }
                return _Form;
            }
        }
        private ObjectSet<Form> _Form;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FormType> FormType
        {
            get
            {
                if ((_FormType == null))
                {
                    _FormType = base.CreateObjectSet<FormType>("FormType");
                }
                return _FormType;
            }
        }
        private ObjectSet<FormType> _FormType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FormInstance> FormInstance
        {
            get
            {
                if ((_FormInstance == null))
                {
                    _FormInstance = base.CreateObjectSet<FormInstance>("FormInstance");
                }
                return _FormInstance;
            }
        }
        private ObjectSet<FormInstance> _FormInstance;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<QuestionInstance> QuestionInstance
        {
            get
            {
                if ((_QuestionInstance == null))
                {
                    _QuestionInstance = base.CreateObjectSet<QuestionInstance>("QuestionInstance");
                }
                return _QuestionInstance;
            }
        }
        private ObjectSet<QuestionInstance> _QuestionInstance;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FormInstanceEvaluation> FormInstanceEvaluation
        {
            get
            {
                if ((_FormInstanceEvaluation == null))
                {
                    _FormInstanceEvaluation = base.CreateObjectSet<FormInstanceEvaluation>("FormInstanceEvaluation");
                }
                return _FormInstanceEvaluation;
            }
        }
        private ObjectSet<FormInstanceEvaluation> _FormInstanceEvaluation;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Answer> Answer
        {
            get
            {
                if ((_Answer == null))
                {
                    _Answer = base.CreateObjectSet<Answer>("Answer");
                }
                return _Answer;
            }
        }
        private ObjectSet<Answer> _Answer;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ChoiceItem> ChoiceItem
        {
            get
            {
                if ((_ChoiceItem == null))
                {
                    _ChoiceItem = base.CreateObjectSet<ChoiceItem>("ChoiceItem");
                }
                return _ChoiceItem;
            }
        }
        private ObjectSet<ChoiceItem> _ChoiceItem;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Question EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuestion(Question question)
        {
            base.AddObject("Question", question);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the QuestionGroup EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuestionGroup(QuestionGroup questionGroup)
        {
            base.AddObject("QuestionGroup", questionGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the QuestionGroupType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuestionGroupType(QuestionGroupType questionGroupType)
        {
            base.AddObject("QuestionGroupType", questionGroupType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the User EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUser(User user)
        {
            base.AddObject("User", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Group EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGroup(Group group)
        {
            base.AddObject("Group", group);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserType(UserType userType)
        {
            base.AddObject("UserType", userType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Form EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToForm(Form form)
        {
            base.AddObject("Form", form);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FormType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFormType(FormType formType)
        {
            base.AddObject("FormType", formType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FormInstance EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFormInstance(FormInstance formInstance)
        {
            base.AddObject("FormInstance", formInstance);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the QuestionInstance EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuestionInstance(QuestionInstance questionInstance)
        {
            base.AddObject("QuestionInstance", questionInstance);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FormInstanceEvaluation EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFormInstanceEvaluation(FormInstanceEvaluation formInstanceEvaluation)
        {
            base.AddObject("FormInstanceEvaluation", formInstanceEvaluation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Answer EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAnswer(Answer answer)
        {
            base.AddObject("Answer", answer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ChoiceItem EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChoiceItem(ChoiceItem choiceItem)
        {
            base.AddObject("ChoiceItem", choiceItem);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="Answer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(TextAnswer))]
    [KnownTypeAttribute(typeof(ChoiceAnswer))]
    [KnownTypeAttribute(typeof(ScaleAnswer))]
    public partial class Answer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Answer object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Answer CreateAnswer(global::System.Int32 id)
        {
            Answer answer = new Answer();
            answer.ID = id;
            return answer;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="Form")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Form : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Form object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="formTypeID">Initial value of the FormTypeID property.</param>
        /// <param name="authorID">Initial value of the AuthorID property.</param>
        public static Form CreateForm(global::System.Int32 id, global::System.String name, global::System.String text, global::System.DateTime created, global::System.Int32 formTypeID, global::System.Int32 authorID)
        {
            Form form = new Form();
            form.ID = id;
            form.Name = name;
            form.Text = text;
            form.Created = created;
            form.FormTypeID = formTypeID;
            form.AuthorID = authorID;
            return form;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TimeToFill
        {
            get
            {
                return _TimeToFill;
            }
            set
            {
                OnTimeToFillChanging(value);
                ReportPropertyChanging("TimeToFill");
                _TimeToFill = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimeToFill");
                OnTimeToFillChanged();
            }
        }
        private Nullable<global::System.DateTime> _TimeToFill;
        partial void OnTimeToFillChanging(Nullable<global::System.DateTime> value);
        partial void OnTimeToFillChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Shuffle
        {
            get
            {
                return _Shuffle;
            }
            set
            {
                OnShuffleChanging(value);
                ReportPropertyChanging("Shuffle");
                _Shuffle = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Shuffle");
                OnShuffleChanged();
            }
        }
        private global::System.Boolean _Shuffle = false;
        partial void OnShuffleChanging(global::System.Boolean value);
        partial void OnShuffleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FormTypeID
        {
            get
            {
                return _FormTypeID;
            }
            set
            {
                OnFormTypeIDChanging(value);
                ReportPropertyChanging("FormTypeID");
                _FormTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FormTypeID");
                OnFormTypeIDChanged();
            }
        }
        private global::System.Int32 _FormTypeID;
        partial void OnFormTypeIDChanging(global::System.Int32 value);
        partial void OnFormTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AuthorID
        {
            get
            {
                return _AuthorID;
            }
            set
            {
                OnAuthorIDChanging(value);
                ReportPropertyChanging("AuthorID");
                _AuthorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AuthorID");
                OnAuthorIDChanged();
            }
        }
        private global::System.Int32 _AuthorID;
        partial void OnAuthorIDChanging(global::System.Int32 value);
        partial void OnAuthorIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FormTemplateFormType", "FormType")]
        public FormType Type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormType>("DataModel.FormTemplateFormType", "FormType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormType>("DataModel.FormTemplateFormType", "FormType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FormType> TypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormType>("DataModel.FormTemplateFormType", "FormType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FormType>("DataModel.FormTemplateFormType", "FormType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FormTemplateAuthor", "User")]
        public User Author
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DataModel.FormTemplateAuthor", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DataModel.FormTemplateAuthor", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> AuthorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DataModel.FormTemplateAuthor", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DataModel.FormTemplateAuthor", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "QuestionGroupFormTemplate", "QuestionGroup")]
        public EntityCollection<QuestionGroup> QuestionGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<QuestionGroup>("DataModel.QuestionGroupFormTemplate", "QuestionGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<QuestionGroup>("DataModel.QuestionGroupFormTemplate", "QuestionGroup", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="FormInstance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FormInstance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FormInstance object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="submited">Initial value of the Submited property.</param>
        /// <param name="solverID">Initial value of the SolverID property.</param>
        /// <param name="formTemplateID">Initial value of the FormTemplateID property.</param>
        public static FormInstance CreateFormInstance(global::System.Int32 id, global::System.DateTime created, global::System.DateTime submited, global::System.Int32 solverID, global::System.Int32 formTemplateID)
        {
            FormInstance formInstance = new FormInstance();
            formInstance.ID = id;
            formInstance.Created = created;
            formInstance.Submited = submited;
            formInstance.SolverID = solverID;
            formInstance.FormTemplateID = formTemplateID;
            return formInstance;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Submited
        {
            get
            {
                return _Submited;
            }
            set
            {
                OnSubmitedChanging(value);
                ReportPropertyChanging("Submited");
                _Submited = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Submited");
                OnSubmitedChanged();
            }
        }
        private global::System.DateTime _Submited;
        partial void OnSubmitedChanging(global::System.DateTime value);
        partial void OnSubmitedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SolverID
        {
            get
            {
                return _SolverID;
            }
            set
            {
                OnSolverIDChanging(value);
                ReportPropertyChanging("SolverID");
                _SolverID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SolverID");
                OnSolverIDChanged();
            }
        }
        private global::System.Int32 _SolverID;
        partial void OnSolverIDChanging(global::System.Int32 value);
        partial void OnSolverIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FormTemplateID
        {
            get
            {
                return _FormTemplateID;
            }
            set
            {
                OnFormTemplateIDChanging(value);
                ReportPropertyChanging("FormTemplateID");
                _FormTemplateID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FormTemplateID");
                OnFormTemplateIDChanged();
            }
        }
        private global::System.Int32 _FormTemplateID;
        partial void OnFormTemplateIDChanging(global::System.Int32 value);
        partial void OnFormTemplateIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FormInstanceUser", "User")]
        public User Solver
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DataModel.FormInstanceUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DataModel.FormInstanceUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> SolverReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DataModel.FormInstanceUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DataModel.FormInstanceUser", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FormInstanceFormTemplate", "FormTemplate")]
        public Form FormTemplate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Form>("DataModel.FormInstanceFormTemplate", "FormTemplate").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Form>("DataModel.FormInstanceFormTemplate", "FormTemplate").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Form> FormTemplateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Form>("DataModel.FormInstanceFormTemplate", "FormTemplate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Form>("DataModel.FormInstanceFormTemplate", "FormTemplate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FormInstanceQuestionInstance", "QuestionInstance")]
        public EntityCollection<QuestionInstance> Questions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<QuestionInstance>("DataModel.FormInstanceQuestionInstance", "QuestionInstance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<QuestionInstance>("DataModel.FormInstanceQuestionInstance", "QuestionInstance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FormInstanceFormInstanceEvaluation", "FormInstanceEvaluation")]
        public FormInstanceEvaluation Evaluation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormInstanceEvaluation>("DataModel.FormInstanceFormInstanceEvaluation", "FormInstanceEvaluation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormInstanceEvaluation>("DataModel.FormInstanceFormInstanceEvaluation", "FormInstanceEvaluation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FormInstanceEvaluation> EvaluationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormInstanceEvaluation>("DataModel.FormInstanceFormInstanceEvaluation", "FormInstanceEvaluation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FormInstanceEvaluation>("DataModel.FormInstanceFormInstanceEvaluation", "FormInstanceEvaluation", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="FormInstanceEvaluation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FormInstanceEvaluation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FormInstanceEvaluation object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="mark">Initial value of the Mark property.</param>
        /// <param name="note">Initial value of the Note property.</param>
        public static FormInstanceEvaluation CreateFormInstanceEvaluation(global::System.Int32 id, global::System.String mark, global::System.String note)
        {
            FormInstanceEvaluation formInstanceEvaluation = new FormInstanceEvaluation();
            formInstanceEvaluation.ID = id;
            formInstanceEvaluation.Mark = mark;
            formInstanceEvaluation.Note = note;
            return formInstanceEvaluation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Mark
        {
            get
            {
                return _Mark;
            }
            set
            {
                OnMarkChanging(value);
                ReportPropertyChanging("Mark");
                _Mark = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Mark");
                OnMarkChanged();
            }
        }
        private global::System.String _Mark;
        partial void OnMarkChanging(global::System.String value);
        partial void OnMarkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FormInstanceFormInstanceEvaluation", "FormInstance")]
        public FormInstance FormInstance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormInstance>("DataModel.FormInstanceFormInstanceEvaluation", "FormInstance").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormInstance>("DataModel.FormInstanceFormInstanceEvaluation", "FormInstance").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FormInstance> FormInstanceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormInstance>("DataModel.FormInstanceFormInstanceEvaluation", "FormInstance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FormInstance>("DataModel.FormInstanceFormInstanceEvaluation", "FormInstance", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="FormType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FormType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FormType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static FormType CreateFormType(global::System.Int32 id, global::System.String name)
        {
            FormType formType = new FormType();
            formType.ID = id;
            formType.Name = name;
            return formType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="Group")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Group : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Group object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="supervisorID">Initial value of the SupervisorID property.</param>
        public static Group CreateGroup(global::System.Int32 id, global::System.String name, global::System.Int32 supervisorID)
        {
            Group group = new Group();
            group.ID = id;
            group.Name = name;
            group.SupervisorID = supervisorID;
            return group;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SupervisorID
        {
            get
            {
                return _SupervisorID;
            }
            set
            {
                OnSupervisorIDChanging(value);
                ReportPropertyChanging("SupervisorID");
                _SupervisorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SupervisorID");
                OnSupervisorIDChanged();
            }
        }
        private global::System.Int32 _SupervisorID;
        partial void OnSupervisorIDChanging(global::System.Int32 value);
        partial void OnSupervisorIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "Supervisor", "User")]
        public User Supervisor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DataModel.Supervisor", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DataModel.Supervisor", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> SupervisorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DataModel.Supervisor", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DataModel.Supervisor", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "GroupMembers", "User")]
        public EntityCollection<User> Members
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("DataModel.GroupMembers", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("DataModel.GroupMembers", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="ChoiceAnswer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChoiceAnswer : Answer
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChoiceAnswer object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="index">Initial value of the Index property.</param>
        public static ChoiceAnswer CreateChoiceAnswer(global::System.Int32 id, global::System.Int32 index)
        {
            ChoiceAnswer choiceAnswer = new ChoiceAnswer();
            choiceAnswer.ID = id;
            choiceAnswer.Index = index;
            return choiceAnswer;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Index
        {
            get
            {
                return _Index;
            }
            set
            {
                OnIndexChanging(value);
                ReportPropertyChanging("Index");
                _Index = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Index");
                OnIndexChanged();
            }
        }
        private global::System.Int32 _Index;
        partial void OnIndexChanging(global::System.Int32 value);
        partial void OnIndexChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="ChoiceItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChoiceItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChoiceItem object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="choiceQuestionID">Initial value of the ChoiceQuestionID property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="index">Initial value of the Index property.</param>
        /// <param name="isCorrect">Initial value of the IsCorrect property.</param>
        /// <param name="explanation">Initial value of the Explanation property.</param>
        public static ChoiceItem CreateChoiceItem(global::System.Int32 id, global::System.Int32 choiceQuestionID, global::System.String text, global::System.Int32 index, global::System.Boolean isCorrect, global::System.String explanation)
        {
            ChoiceItem choiceItem = new ChoiceItem();
            choiceItem.ID = id;
            choiceItem.ChoiceQuestionID = choiceQuestionID;
            choiceItem.Text = text;
            choiceItem.Index = index;
            choiceItem.IsCorrect = isCorrect;
            choiceItem.Explanation = explanation;
            return choiceItem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChoiceQuestionID
        {
            get
            {
                return _ChoiceQuestionID;
            }
            set
            {
                OnChoiceQuestionIDChanging(value);
                ReportPropertyChanging("ChoiceQuestionID");
                _ChoiceQuestionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChoiceQuestionID");
                OnChoiceQuestionIDChanged();
            }
        }
        private global::System.Int32 _ChoiceQuestionID;
        partial void OnChoiceQuestionIDChanging(global::System.Int32 value);
        partial void OnChoiceQuestionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Index
        {
            get
            {
                return _Index;
            }
            set
            {
                OnIndexChanging(value);
                ReportPropertyChanging("Index");
                _Index = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Index");
                OnIndexChanged();
            }
        }
        private global::System.Int32 _Index;
        partial void OnIndexChanging(global::System.Int32 value);
        partial void OnIndexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCorrect
        {
            get
            {
                return _IsCorrect;
            }
            set
            {
                OnIsCorrectChanging(value);
                ReportPropertyChanging("IsCorrect");
                _IsCorrect = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCorrect");
                OnIsCorrectChanged();
            }
        }
        private global::System.Boolean _IsCorrect;
        partial void OnIsCorrectChanging(global::System.Boolean value);
        partial void OnIsCorrectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Explanation
        {
            get
            {
                return _Explanation;
            }
            set
            {
                OnExplanationChanging(value);
                ReportPropertyChanging("Explanation");
                _Explanation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Explanation");
                OnExplanationChanged();
            }
        }
        private global::System.String _Explanation;
        partial void OnExplanationChanging(global::System.String value);
        partial void OnExplanationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImageUrl
        {
            get
            {
                return _ImageUrl;
            }
            set
            {
                OnImageUrlChanging(value);
                ReportPropertyChanging("ImageUrl");
                _ImageUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImageUrl");
                OnImageUrlChanged();
            }
        }
        private global::System.String _ImageUrl;
        partial void OnImageUrlChanging(global::System.String value);
        partial void OnImageUrlChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="ChoiceQuestion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChoiceQuestion : Question
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChoiceQuestion object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="questionGroupID">Initial value of the QuestionGroupID property.</param>
        /// <param name="shuffle">Initial value of the Shuffle property.</param>
        public static ChoiceQuestion CreateChoiceQuestion(global::System.Int32 id, global::System.String text, global::System.Int32 questionGroupID, global::System.String shuffle)
        {
            ChoiceQuestion choiceQuestion = new ChoiceQuestion();
            choiceQuestion.ID = id;
            choiceQuestion.Text = text;
            choiceQuestion.QuestionGroupID = questionGroupID;
            choiceQuestion.Shuffle = shuffle;
            return choiceQuestion;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Shuffle
        {
            get
            {
                return _Shuffle;
            }
            set
            {
                OnShuffleChanging(value);
                ReportPropertyChanging("Shuffle");
                _Shuffle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Shuffle");
                OnShuffleChanged();
            }
        }
        private global::System.String _Shuffle;
        partial void OnShuffleChanging(global::System.String value);
        partial void OnShuffleChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "ChoiceQuestionChoiceItem", "ChoiceItem")]
        public EntityCollection<ChoiceItem> ChoiceItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChoiceItem>("DataModel.ChoiceQuestionChoiceItem", "ChoiceItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChoiceItem>("DataModel.ChoiceQuestionChoiceItem", "ChoiceItem", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="Question")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(ChoiceQuestion))]
    [KnownTypeAttribute(typeof(ScaleQuestion))]
    public partial class Question : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Question object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="questionGroupID">Initial value of the QuestionGroupID property.</param>
        public static Question CreateQuestion(global::System.Int32 id, global::System.String text, global::System.Int32 questionGroupID)
        {
            Question question = new Question();
            question.ID = id;
            question.Text = text;
            question.QuestionGroupID = questionGroupID;
            return question;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HelpText
        {
            get
            {
                return _HelpText;
            }
            set
            {
                OnHelpTextChanging(value);
                ReportPropertyChanging("HelpText");
                _HelpText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HelpText");
                OnHelpTextChanged();
            }
        }
        private global::System.String _HelpText;
        partial void OnHelpTextChanging(global::System.String value);
        partial void OnHelpTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImageUrl
        {
            get
            {
                return _ImageUrl;
            }
            set
            {
                OnImageUrlChanging(value);
                ReportPropertyChanging("ImageUrl");
                _ImageUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImageUrl");
                OnImageUrlChanged();
            }
        }
        private global::System.String _ImageUrl;
        partial void OnImageUrlChanging(global::System.String value);
        partial void OnImageUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Explanation
        {
            get
            {
                return _Explanation;
            }
            set
            {
                OnExplanationChanging(value);
                ReportPropertyChanging("Explanation");
                _Explanation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Explanation");
                OnExplanationChanged();
            }
        }
        private global::System.String _Explanation;
        partial void OnExplanationChanging(global::System.String value);
        partial void OnExplanationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuestionGroupID
        {
            get
            {
                return _QuestionGroupID;
            }
            set
            {
                OnQuestionGroupIDChanging(value);
                ReportPropertyChanging("QuestionGroupID");
                _QuestionGroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QuestionGroupID");
                OnQuestionGroupIDChanged();
            }
        }
        private global::System.Int32 _QuestionGroupID;
        partial void OnQuestionGroupIDChanging(global::System.Int32 value);
        partial void OnQuestionGroupIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "QuestionGroupQuestion", "QuestionGroup")]
        public QuestionGroup QuestionGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuestionGroup>("DataModel.QuestionGroupQuestion", "QuestionGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuestionGroup>("DataModel.QuestionGroupQuestion", "QuestionGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<QuestionGroup> QuestionGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuestionGroup>("DataModel.QuestionGroupQuestion", "QuestionGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<QuestionGroup>("DataModel.QuestionGroupQuestion", "QuestionGroup", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="QuestionGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class QuestionGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new QuestionGroup object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="index">Initial value of the Index property.</param>
        /// <param name="questionGroupTypeID">Initial value of the QuestionGroupTypeID property.</param>
        /// <param name="formTemplateID">Initial value of the FormTemplateID property.</param>
        public static QuestionGroup CreateQuestionGroup(global::System.Int32 id, global::System.Int32 index, global::System.Int32 questionGroupTypeID, global::System.Int32 formTemplateID)
        {
            QuestionGroup questionGroup = new QuestionGroup();
            questionGroup.ID = id;
            questionGroup.Index = index;
            questionGroup.QuestionGroupTypeID = questionGroupTypeID;
            questionGroup.FormTemplateID = formTemplateID;
            return questionGroup;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Index
        {
            get
            {
                return _Index;
            }
            set
            {
                OnIndexChanging(value);
                ReportPropertyChanging("Index");
                _Index = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Index");
                OnIndexChanged();
            }
        }
        private global::System.Int32 _Index;
        partial void OnIndexChanging(global::System.Int32 value);
        partial void OnIndexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsRequired
        {
            get
            {
                return _IsRequired;
            }
            set
            {
                OnIsRequiredChanging(value);
                ReportPropertyChanging("IsRequired");
                _IsRequired = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsRequired");
                OnIsRequiredChanged();
            }
        }
        private global::System.Boolean _IsRequired = false;
        partial void OnIsRequiredChanging(global::System.Boolean value);
        partial void OnIsRequiredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuestionGroupTypeID
        {
            get
            {
                return _QuestionGroupTypeID;
            }
            set
            {
                OnQuestionGroupTypeIDChanging(value);
                ReportPropertyChanging("QuestionGroupTypeID");
                _QuestionGroupTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QuestionGroupTypeID");
                OnQuestionGroupTypeIDChanged();
            }
        }
        private global::System.Int32 _QuestionGroupTypeID;
        partial void OnQuestionGroupTypeIDChanging(global::System.Int32 value);
        partial void OnQuestionGroupTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FormTemplateID
        {
            get
            {
                return _FormTemplateID;
            }
            set
            {
                OnFormTemplateIDChanging(value);
                ReportPropertyChanging("FormTemplateID");
                _FormTemplateID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FormTemplateID");
                OnFormTemplateIDChanged();
            }
        }
        private global::System.Int32 _FormTemplateID;
        partial void OnFormTemplateIDChanging(global::System.Int32 value);
        partial void OnFormTemplateIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "QuestionGroupQuestion", "Question")]
        public EntityCollection<Question> Questions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Question>("DataModel.QuestionGroupQuestion", "Question");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Question>("DataModel.QuestionGroupQuestion", "Question", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "QuestionGroupQuestionGroupType", "QuestionGroupType")]
        public QuestionGroupType Type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuestionGroupType>("DataModel.QuestionGroupQuestionGroupType", "QuestionGroupType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuestionGroupType>("DataModel.QuestionGroupQuestionGroupType", "QuestionGroupType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<QuestionGroupType> TypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuestionGroupType>("DataModel.QuestionGroupQuestionGroupType", "QuestionGroupType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<QuestionGroupType>("DataModel.QuestionGroupQuestionGroupType", "QuestionGroupType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "QuestionGroupFormTemplate", "FormTemplate")]
        public Form ParentForm
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Form>("DataModel.QuestionGroupFormTemplate", "FormTemplate").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Form>("DataModel.QuestionGroupFormTemplate", "FormTemplate").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Form> ParentFormReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Form>("DataModel.QuestionGroupFormTemplate", "FormTemplate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Form>("DataModel.QuestionGroupFormTemplate", "FormTemplate", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="QuestionGroupType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class QuestionGroupType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new QuestionGroupType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static QuestionGroupType CreateQuestionGroupType(global::System.Int32 id, global::System.String name)
        {
            QuestionGroupType questionGroupType = new QuestionGroupType();
            questionGroupType.ID = id;
            questionGroupType.Name = name;
            return questionGroupType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="QuestionInstance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class QuestionInstance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new QuestionInstance object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="index">Initial value of the Index property.</param>
        /// <param name="questionID">Initial value of the QuestionID property.</param>
        /// <param name="formInstanceID">Initial value of the FormInstanceID property.</param>
        public static QuestionInstance CreateQuestionInstance(global::System.Int32 id, global::System.Int32 index, global::System.Int32 questionID, global::System.Int32 formInstanceID)
        {
            QuestionInstance questionInstance = new QuestionInstance();
            questionInstance.ID = id;
            questionInstance.Index = index;
            questionInstance.QuestionID = questionID;
            questionInstance.FormInstanceID = formInstanceID;
            return questionInstance;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Index
        {
            get
            {
                return _Index;
            }
            set
            {
                OnIndexChanging(value);
                ReportPropertyChanging("Index");
                _Index = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Index");
                OnIndexChanged();
            }
        }
        private global::System.Int32 _Index;
        partial void OnIndexChanging(global::System.Int32 value);
        partial void OnIndexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuestionID
        {
            get
            {
                return _QuestionID;
            }
            set
            {
                OnQuestionIDChanging(value);
                ReportPropertyChanging("QuestionID");
                _QuestionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QuestionID");
                OnQuestionIDChanged();
            }
        }
        private global::System.Int32 _QuestionID;
        partial void OnQuestionIDChanging(global::System.Int32 value);
        partial void OnQuestionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FormInstanceID
        {
            get
            {
                return _FormInstanceID;
            }
            set
            {
                OnFormInstanceIDChanging(value);
                ReportPropertyChanging("FormInstanceID");
                _FormInstanceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FormInstanceID");
                OnFormInstanceIDChanged();
            }
        }
        private global::System.Int32 _FormInstanceID;
        partial void OnFormInstanceIDChanging(global::System.Int32 value);
        partial void OnFormInstanceIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "QuestionInstanceQuestionTemplate", "Question")]
        public Question QuestionTemplate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("DataModel.QuestionInstanceQuestionTemplate", "Question").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("DataModel.QuestionInstanceQuestionTemplate", "Question").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Question> QuestionTemplateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("DataModel.QuestionInstanceQuestionTemplate", "Question");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Question>("DataModel.QuestionInstanceQuestionTemplate", "Question", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FormInstanceQuestionInstance", "FormInstance")]
        public FormInstance ParentForm
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormInstance>("DataModel.FormInstanceQuestionInstance", "FormInstance").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormInstance>("DataModel.FormInstanceQuestionInstance", "FormInstance").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FormInstance> ParentFormReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormInstance>("DataModel.FormInstanceQuestionInstance", "FormInstance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FormInstance>("DataModel.FormInstanceQuestionInstance", "FormInstance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "QuestionInstanceAnswer", "Answer")]
        public Answer Answer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Answer>("DataModel.QuestionInstanceAnswer", "Answer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Answer>("DataModel.QuestionInstanceAnswer", "Answer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Answer> AnswerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Answer>("DataModel.QuestionInstanceAnswer", "Answer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Answer>("DataModel.QuestionInstanceAnswer", "Answer", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="ScaleAnswer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ScaleAnswer : Answer
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ScaleAnswer object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static ScaleAnswer CreateScaleAnswer(global::System.Int32 id, global::System.Int32 value)
        {
            ScaleAnswer scaleAnswer = new ScaleAnswer();
            scaleAnswer.ID = id;
            scaleAnswer.Value = value;
            return scaleAnswer;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Int32 _Value;
        partial void OnValueChanging(global::System.Int32 value);
        partial void OnValueChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="ScaleQuestion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ScaleQuestion : Question
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ScaleQuestion object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="questionGroupID">Initial value of the QuestionGroupID property.</param>
        /// <param name="minValue">Initial value of the MinValue property.</param>
        /// <param name="minValueText">Initial value of the MinValueText property.</param>
        /// <param name="maxValue">Initial value of the MaxValue property.</param>
        /// <param name="maxValueText">Initial value of the MaxValueText property.</param>
        /// <param name="increment">Initial value of the Increment property.</param>
        public static ScaleQuestion CreateScaleQuestion(global::System.Int32 id, global::System.String text, global::System.Int32 questionGroupID, global::System.Int32 minValue, global::System.String minValueText, global::System.Int32 maxValue, global::System.String maxValueText, global::System.Int32 increment)
        {
            ScaleQuestion scaleQuestion = new ScaleQuestion();
            scaleQuestion.ID = id;
            scaleQuestion.Text = text;
            scaleQuestion.QuestionGroupID = questionGroupID;
            scaleQuestion.MinValue = minValue;
            scaleQuestion.MinValueText = minValueText;
            scaleQuestion.MaxValue = maxValue;
            scaleQuestion.MaxValueText = maxValueText;
            scaleQuestion.Increment = increment;
            return scaleQuestion;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MinValue
        {
            get
            {
                return _MinValue;
            }
            set
            {
                OnMinValueChanging(value);
                ReportPropertyChanging("MinValue");
                _MinValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MinValue");
                OnMinValueChanged();
            }
        }
        private global::System.Int32 _MinValue;
        partial void OnMinValueChanging(global::System.Int32 value);
        partial void OnMinValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MinValueText
        {
            get
            {
                return _MinValueText;
            }
            set
            {
                OnMinValueTextChanging(value);
                ReportPropertyChanging("MinValueText");
                _MinValueText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MinValueText");
                OnMinValueTextChanged();
            }
        }
        private global::System.String _MinValueText;
        partial void OnMinValueTextChanging(global::System.String value);
        partial void OnMinValueTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaxValue
        {
            get
            {
                return _MaxValue;
            }
            set
            {
                OnMaxValueChanging(value);
                ReportPropertyChanging("MaxValue");
                _MaxValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxValue");
                OnMaxValueChanged();
            }
        }
        private global::System.Int32 _MaxValue;
        partial void OnMaxValueChanging(global::System.Int32 value);
        partial void OnMaxValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MaxValueText
        {
            get
            {
                return _MaxValueText;
            }
            set
            {
                OnMaxValueTextChanging(value);
                ReportPropertyChanging("MaxValueText");
                _MaxValueText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MaxValueText");
                OnMaxValueTextChanged();
            }
        }
        private global::System.String _MaxValueText;
        partial void OnMaxValueTextChanging(global::System.String value);
        partial void OnMaxValueTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Increment
        {
            get
            {
                return _Increment;
            }
            set
            {
                OnIncrementChanging(value);
                ReportPropertyChanging("Increment");
                _Increment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Increment");
                OnIncrementChanged();
            }
        }
        private global::System.Int32 _Increment;
        partial void OnIncrementChanging(global::System.Int32 value);
        partial void OnIncrementChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="TextAnswer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TextAnswer : Answer
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TextAnswer object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        public static TextAnswer CreateTextAnswer(global::System.Int32 id, global::System.String text)
        {
            TextAnswer textAnswer = new TextAnswer();
            textAnswer.ID = id;
            textAnswer.Text = text;
            return textAnswer;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="userTypeID">Initial value of the UserTypeID property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String email, global::System.Int32 userTypeID)
        {
            User user = new User();
            user.ID = id;
            user.Email = email;
            user.UserTypeID = userTypeID;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserTypeID
        {
            get
            {
                return _UserTypeID;
            }
            set
            {
                OnUserTypeIDChanging(value);
                ReportPropertyChanging("UserTypeID");
                _UserTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserTypeID");
                OnUserTypeIDChanged();
            }
        }
        private global::System.Int32 _UserTypeID;
        partial void OnUserTypeIDChanging(global::System.Int32 value);
        partial void OnUserTypeIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "GroupMembers", "Group")]
        public EntityCollection<Group> Groups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Group>("DataModel.GroupMembers", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Group>("DataModel.GroupMembers", "Group", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "UserUserType", "UserType")]
        public UserType Type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserType>("DataModel.UserUserType", "UserType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserType>("DataModel.UserUserType", "UserType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserType> TypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserType>("DataModel.UserUserType", "UserType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserType>("DataModel.UserUserType", "UserType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FormInstanceUser", "FormInstance")]
        public EntityCollection<FormInstance> SolvedForms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FormInstance>("DataModel.FormInstanceUser", "FormInstance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FormInstance>("DataModel.FormInstanceUser", "FormInstance", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="UserType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static UserType CreateUserType(global::System.Int32 id, global::System.String name)
        {
            UserType userType = new UserType();
            userType.ID = id;
            userType.Name = name;
            return userType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
    }

    #endregion
    
}
