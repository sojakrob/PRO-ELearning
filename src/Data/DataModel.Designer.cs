//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("DataModel", "QuestionGroupQuestion", "QuestionGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ELearning.Data.QuestionGroup), "Question", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ELearning.Data.Question), true)]
[assembly: EdmRelationshipAttribute("DataModel", "QuestionGroupQuestionGroupType", "QuestionGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ELearning.Data.QuestionGroup), "QuestionGroupType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ELearning.Data.QuestionGroupType), true)]
[assembly: EdmRelationshipAttribute("DataModel", "Supervisor", "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ELearning.Data.Group), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ELearning.Data.User), true)]
[assembly: EdmRelationshipAttribute("DataModel", "GroupMembers", "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ELearning.Data.Group), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ELearning.Data.User))]
[assembly: EdmRelationshipAttribute("DataModel", "UserUserType", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ELearning.Data.User), "UserType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ELearning.Data.UserType), true)]
[assembly: EdmRelationshipAttribute("DataModel", "FormTemplateFormType", "FormTemplate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ELearning.Data.Form), "FormType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ELearning.Data.FormType), true)]
[assembly: EdmRelationshipAttribute("DataModel", "FormTemplateAuthor", "FormTemplate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ELearning.Data.Form), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ELearning.Data.User), true)]
[assembly: EdmRelationshipAttribute("DataModel", "QuestionGroupFormTemplate", "QuestionGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ELearning.Data.QuestionGroup), "FormTemplate", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ELearning.Data.Form), true)]
[assembly: EdmRelationshipAttribute("DataModel", "FormInstanceUser", "FormInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ELearning.Data.FormInstance), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ELearning.Data.User), true)]
[assembly: EdmRelationshipAttribute("DataModel", "FormInstanceFormTemplate", "FormInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ELearning.Data.FormInstance), "FormTemplate", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ELearning.Data.Form), true)]
[assembly: EdmRelationshipAttribute("DataModel", "QuestionInstanceQuestionTemplate", "QuestionInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ELearning.Data.QuestionInstance), "Question", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ELearning.Data.Question), true)]
[assembly: EdmRelationshipAttribute("DataModel", "FormInstanceQuestionInstance", "FormInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ELearning.Data.FormInstance), "QuestionInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ELearning.Data.QuestionInstance), true)]
[assembly: EdmRelationshipAttribute("DataModel", "FormInstanceFormInstanceEvaluation", "FormInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ELearning.Data.FormInstance), "FormInstanceEvaluation", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ELearning.Data.FormInstanceEvaluation))]
[assembly: EdmRelationshipAttribute("DataModel", "QuestionInstanceAnswer", "QuestionInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ELearning.Data.QuestionInstance), "Answer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ELearning.Data.Answer))]
[assembly: EdmRelationshipAttribute("DataModel", "ChoiceQuestionChoiceItem", "ChoiceQuestion", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ELearning.Data.ChoiceQuestion), "ChoiceItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ELearning.Data.ChoiceItem), true)]
[assembly: EdmRelationshipAttribute("DataModel", "UserFillingFormInstance", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ELearning.Data.User), "FormInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ELearning.Data.FormInstance))]
[assembly: EdmRelationshipAttribute("DataModel", "FormGroup", "Form", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ELearning.Data.Form), "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ELearning.Data.Group))]
[assembly: EdmRelationshipAttribute("DataModel", "FormFormState", "Form", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ELearning.Data.Form), "FormState", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ELearning.Data.FormState), true)]
[assembly: EdmRelationshipAttribute("DataModel", "FormInstanceEvaluationMarkValue", "FormInstanceEvaluation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ELearning.Data.FormInstanceEvaluation), "MarkValue", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ELearning.Data.MarkValue), true)]
[assembly: EdmRelationshipAttribute("DataModel", "MultipleChoiceAnswerMultipleChoiceAnswerItem", "MultipleChoiceAnswer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ELearning.Data.MultipleChoiceAnswer), "MultipleChoiceAnswerItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ELearning.Data.MultipleChoiceAnswerItem), true)]
[assembly: EdmRelationshipAttribute("DataModel", "MultipleChoiceAnswerItemChoiceItem", "MultipleChoiceAnswerItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ELearning.Data.MultipleChoiceAnswerItem), "ChoiceItem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ELearning.Data.ChoiceItem), true)]
[assembly: EdmRelationshipAttribute("DataModel", "ChoiceAnswerChoiceItem", "ChoiceAnswer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ELearning.Data.ChoiceAnswer), "ChoiceItem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ELearning.Data.ChoiceItem), true)]
[assembly: EdmRelationshipAttribute("DataModel", "TextBookUserCreator", "TextBook", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ELearning.Data.TextBook), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ELearning.Data.User), true)]
[assembly: EdmRelationshipAttribute("DataModel", "TextBookUserChanger", "TextBook", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ELearning.Data.TextBook), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ELearning.Data.User), true)]
[assembly: EdmRelationshipAttribute("DataModel", "TextBookGroup", "TextBook", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ELearning.Data.TextBook), "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ELearning.Data.Group))]
[assembly: EdmRelationshipAttribute("DataModel", "TextBookTextBookLink", "TextBook", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ELearning.Data.TextBook), "TextBookLink", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ELearning.Data.TextBookLink), true)]
[assembly: EdmRelationshipAttribute("DataModel", "TextBookLinkQuestionGroup", "TextBookLink", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ELearning.Data.TextBookLink), "QuestionGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ELearning.Data.QuestionGroup))]
[assembly: EdmRelationshipAttribute("DataModel", "GradeGradeGroup", "Grade", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ELearning.Data.Grade), "GradeGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ELearning.Data.GradeGroup))]
[assembly: EdmRelationshipAttribute("DataModel", "GradeGroupForm", "GradeGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ELearning.Data.GradeGroup), "Form", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ELearning.Data.Form))]

#endregion

namespace ELearning.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DataModelContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DataModelContainer object using the connection string found in the 'DataModelContainer' section of the application configuration file.
        /// </summary>
        public DataModelContainer() : base("name=DataModelContainer", "DataModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DataModelContainer object.
        /// </summary>
        public DataModelContainer(string connectionString) : base(connectionString, "DataModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DataModelContainer object.
        /// </summary>
        public DataModelContainer(EntityConnection connection) : base(connection, "DataModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Question> Question
        {
            get
            {
                if ((_Question == null))
                {
                    _Question = base.CreateObjectSet<Question>("Question");
                }
                return _Question;
            }
        }
        private ObjectSet<Question> _Question;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<QuestionGroup> QuestionGroup
        {
            get
            {
                if ((_QuestionGroup == null))
                {
                    _QuestionGroup = base.CreateObjectSet<QuestionGroup>("QuestionGroup");
                }
                return _QuestionGroup;
            }
        }
        private ObjectSet<QuestionGroup> _QuestionGroup;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<QuestionGroupType> QuestionGroupType
        {
            get
            {
                if ((_QuestionGroupType == null))
                {
                    _QuestionGroupType = base.CreateObjectSet<QuestionGroupType>("QuestionGroupType");
                }
                return _QuestionGroupType;
            }
        }
        private ObjectSet<QuestionGroupType> _QuestionGroupType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> User
        {
            get
            {
                if ((_User == null))
                {
                    _User = base.CreateObjectSet<User>("User");
                }
                return _User;
            }
        }
        private ObjectSet<User> _User;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Group> Group
        {
            get
            {
                if ((_Group == null))
                {
                    _Group = base.CreateObjectSet<Group>("Group");
                }
                return _Group;
            }
        }
        private ObjectSet<Group> _Group;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserType> UserType
        {
            get
            {
                if ((_UserType == null))
                {
                    _UserType = base.CreateObjectSet<UserType>("UserType");
                }
                return _UserType;
            }
        }
        private ObjectSet<UserType> _UserType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Form> Form
        {
            get
            {
                if ((_Form == null))
                {
                    _Form = base.CreateObjectSet<Form>("Form");
                }
                return _Form;
            }
        }
        private ObjectSet<Form> _Form;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FormType> FormType
        {
            get
            {
                if ((_FormType == null))
                {
                    _FormType = base.CreateObjectSet<FormType>("FormType");
                }
                return _FormType;
            }
        }
        private ObjectSet<FormType> _FormType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FormInstance> FormInstance
        {
            get
            {
                if ((_FormInstance == null))
                {
                    _FormInstance = base.CreateObjectSet<FormInstance>("FormInstance");
                }
                return _FormInstance;
            }
        }
        private ObjectSet<FormInstance> _FormInstance;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<QuestionInstance> QuestionInstance
        {
            get
            {
                if ((_QuestionInstance == null))
                {
                    _QuestionInstance = base.CreateObjectSet<QuestionInstance>("QuestionInstance");
                }
                return _QuestionInstance;
            }
        }
        private ObjectSet<QuestionInstance> _QuestionInstance;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FormInstanceEvaluation> FormInstanceEvaluation
        {
            get
            {
                if ((_FormInstanceEvaluation == null))
                {
                    _FormInstanceEvaluation = base.CreateObjectSet<FormInstanceEvaluation>("FormInstanceEvaluation");
                }
                return _FormInstanceEvaluation;
            }
        }
        private ObjectSet<FormInstanceEvaluation> _FormInstanceEvaluation;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Answer> Answer
        {
            get
            {
                if ((_Answer == null))
                {
                    _Answer = base.CreateObjectSet<Answer>("Answer");
                }
                return _Answer;
            }
        }
        private ObjectSet<Answer> _Answer;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ChoiceItem> ChoiceItem
        {
            get
            {
                if ((_ChoiceItem == null))
                {
                    _ChoiceItem = base.CreateObjectSet<ChoiceItem>("ChoiceItem");
                }
                return _ChoiceItem;
            }
        }
        private ObjectSet<ChoiceItem> _ChoiceItem;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FormState> FormState
        {
            get
            {
                if ((_FormState == null))
                {
                    _FormState = base.CreateObjectSet<FormState>("FormState");
                }
                return _FormState;
            }
        }
        private ObjectSet<FormState> _FormState;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MarkValue> MarkValue
        {
            get
            {
                if ((_MarkValue == null))
                {
                    _MarkValue = base.CreateObjectSet<MarkValue>("MarkValue");
                }
                return _MarkValue;
            }
        }
        private ObjectSet<MarkValue> _MarkValue;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MultipleChoiceAnswerItem> MultipleChoiceAnswerItem
        {
            get
            {
                if ((_MultipleChoiceAnswerItem == null))
                {
                    _MultipleChoiceAnswerItem = base.CreateObjectSet<MultipleChoiceAnswerItem>("MultipleChoiceAnswerItem");
                }
                return _MultipleChoiceAnswerItem;
            }
        }
        private ObjectSet<MultipleChoiceAnswerItem> _MultipleChoiceAnswerItem;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TextBook> TextBook
        {
            get
            {
                if ((_TextBook == null))
                {
                    _TextBook = base.CreateObjectSet<TextBook>("TextBook");
                }
                return _TextBook;
            }
        }
        private ObjectSet<TextBook> _TextBook;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TextBookLink> TextBookLink
        {
            get
            {
                if ((_TextBookLink == null))
                {
                    _TextBookLink = base.CreateObjectSet<TextBookLink>("TextBookLink");
                }
                return _TextBookLink;
            }
        }
        private ObjectSet<TextBookLink> _TextBookLink;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Grade> GradeSet
        {
            get
            {
                if ((_GradeSet == null))
                {
                    _GradeSet = base.CreateObjectSet<Grade>("GradeSet");
                }
                return _GradeSet;
            }
        }
        private ObjectSet<Grade> _GradeSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GradeGroup> GradeGroupSet
        {
            get
            {
                if ((_GradeGroupSet == null))
                {
                    _GradeGroupSet = base.CreateObjectSet<GradeGroup>("GradeGroupSet");
                }
                return _GradeGroupSet;
            }
        }
        private ObjectSet<GradeGroup> _GradeGroupSet;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Question EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuestion(Question question)
        {
            base.AddObject("Question", question);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the QuestionGroup EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuestionGroup(QuestionGroup questionGroup)
        {
            base.AddObject("QuestionGroup", questionGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the QuestionGroupType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuestionGroupType(QuestionGroupType questionGroupType)
        {
            base.AddObject("QuestionGroupType", questionGroupType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the User EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUser(User user)
        {
            base.AddObject("User", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Group EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGroup(Group group)
        {
            base.AddObject("Group", group);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserType(UserType userType)
        {
            base.AddObject("UserType", userType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Form EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToForm(Form form)
        {
            base.AddObject("Form", form);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FormType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFormType(FormType formType)
        {
            base.AddObject("FormType", formType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FormInstance EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFormInstance(FormInstance formInstance)
        {
            base.AddObject("FormInstance", formInstance);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the QuestionInstance EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuestionInstance(QuestionInstance questionInstance)
        {
            base.AddObject("QuestionInstance", questionInstance);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FormInstanceEvaluation EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFormInstanceEvaluation(FormInstanceEvaluation formInstanceEvaluation)
        {
            base.AddObject("FormInstanceEvaluation", formInstanceEvaluation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Answer EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAnswer(Answer answer)
        {
            base.AddObject("Answer", answer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ChoiceItem EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChoiceItem(ChoiceItem choiceItem)
        {
            base.AddObject("ChoiceItem", choiceItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FormState EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFormState(FormState formState)
        {
            base.AddObject("FormState", formState);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MarkValue EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMarkValue(MarkValue markValue)
        {
            base.AddObject("MarkValue", markValue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MultipleChoiceAnswerItem EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMultipleChoiceAnswerItem(MultipleChoiceAnswerItem multipleChoiceAnswerItem)
        {
            base.AddObject("MultipleChoiceAnswerItem", multipleChoiceAnswerItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TextBook EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTextBook(TextBook textBook)
        {
            base.AddObject("TextBook", textBook);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TextBookLink EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTextBookLink(TextBookLink textBookLink)
        {
            base.AddObject("TextBookLink", textBookLink);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GradeSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGradeSet(Grade grade)
        {
            base.AddObject("GradeSet", grade);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GradeGroupSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGradeGroupSet(GradeGroup gradeGroup)
        {
            base.AddObject("GradeGroupSet", gradeGroup);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="Answer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(MultipleChoiceAnswer))]
    [KnownTypeAttribute(typeof(ChoiceAnswer))]
    [KnownTypeAttribute(typeof(TextAnswer))]
    [KnownTypeAttribute(typeof(ScaleAnswer))]
    public partial class Answer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Answer object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Answer CreateAnswer(global::System.Int32 id)
        {
            Answer answer = new Answer();
            answer.ID = id;
            return answer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="ChoiceAnswer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChoiceAnswer : Answer
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChoiceAnswer object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="itemID">Initial value of the ItemID property.</param>
        public static ChoiceAnswer CreateChoiceAnswer(global::System.Int32 id, global::System.Int32 itemID)
        {
            ChoiceAnswer choiceAnswer = new ChoiceAnswer();
            choiceAnswer.ID = id;
            choiceAnswer.ItemID = itemID;
            return choiceAnswer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemID
        {
            get
            {
                return _ItemID;
            }
            set
            {
                OnItemIDChanging(value);
                ReportPropertyChanging("ItemID");
                _ItemID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ItemID");
                OnItemIDChanged();
            }
        }
        private global::System.Int32 _ItemID;
        partial void OnItemIDChanging(global::System.Int32 value);
        partial void OnItemIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "ChoiceAnswerChoiceItem", "ChoiceItem")]
        public ChoiceItem ChoiceItemTemplate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChoiceItem>("DataModel.ChoiceAnswerChoiceItem", "ChoiceItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChoiceItem>("DataModel.ChoiceAnswerChoiceItem", "ChoiceItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ChoiceItem> ChoiceItemTemplateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChoiceItem>("DataModel.ChoiceAnswerChoiceItem", "ChoiceItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ChoiceItem>("DataModel.ChoiceAnswerChoiceItem", "ChoiceItem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="ChoiceItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChoiceItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChoiceItem object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="choiceQuestionID">Initial value of the ChoiceQuestionID property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="index">Initial value of the Index property.</param>
        /// <param name="isCorrect">Initial value of the IsCorrect property.</param>
        public static ChoiceItem CreateChoiceItem(global::System.Int32 id, global::System.Int32 choiceQuestionID, global::System.String text, global::System.Int32 index, global::System.Boolean isCorrect)
        {
            ChoiceItem choiceItem = new ChoiceItem();
            choiceItem.ID = id;
            choiceItem.ChoiceQuestionID = choiceQuestionID;
            choiceItem.Text = text;
            choiceItem.Index = index;
            choiceItem.IsCorrect = isCorrect;
            return choiceItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChoiceQuestionID
        {
            get
            {
                return _ChoiceQuestionID;
            }
            set
            {
                OnChoiceQuestionIDChanging(value);
                ReportPropertyChanging("ChoiceQuestionID");
                _ChoiceQuestionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChoiceQuestionID");
                OnChoiceQuestionIDChanged();
            }
        }
        private global::System.Int32 _ChoiceQuestionID;
        partial void OnChoiceQuestionIDChanging(global::System.Int32 value);
        partial void OnChoiceQuestionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Index
        {
            get
            {
                return _Index;
            }
            set
            {
                OnIndexChanging(value);
                ReportPropertyChanging("Index");
                _Index = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Index");
                OnIndexChanged();
            }
        }
        private global::System.Int32 _Index;
        partial void OnIndexChanging(global::System.Int32 value);
        partial void OnIndexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCorrect
        {
            get
            {
                return _IsCorrect;
            }
            set
            {
                OnIsCorrectChanging(value);
                ReportPropertyChanging("IsCorrect");
                _IsCorrect = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCorrect");
                OnIsCorrectChanged();
            }
        }
        private global::System.Boolean _IsCorrect;
        partial void OnIsCorrectChanging(global::System.Boolean value);
        partial void OnIsCorrectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Explanation
        {
            get
            {
                return _Explanation;
            }
            set
            {
                OnExplanationChanging(value);
                ReportPropertyChanging("Explanation");
                _Explanation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Explanation");
                OnExplanationChanged();
            }
        }
        private global::System.String _Explanation;
        partial void OnExplanationChanging(global::System.String value);
        partial void OnExplanationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImageUrl
        {
            get
            {
                return _ImageUrl;
            }
            set
            {
                OnImageUrlChanging(value);
                ReportPropertyChanging("ImageUrl");
                _ImageUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImageUrl");
                OnImageUrlChanged();
            }
        }
        private global::System.String _ImageUrl;
        partial void OnImageUrlChanging(global::System.String value);
        partial void OnImageUrlChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="ChoiceQuestion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChoiceQuestion : Question
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChoiceQuestion object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="questionGroupID">Initial value of the QuestionGroupID property.</param>
        /// <param name="shuffle">Initial value of the Shuffle property.</param>
        public static ChoiceQuestion CreateChoiceQuestion(global::System.Int32 id, global::System.String text, global::System.Int32 questionGroupID, global::System.Boolean shuffle)
        {
            ChoiceQuestion choiceQuestion = new ChoiceQuestion();
            choiceQuestion.ID = id;
            choiceQuestion.Text = text;
            choiceQuestion.QuestionGroupID = questionGroupID;
            choiceQuestion.Shuffle = shuffle;
            return choiceQuestion;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Shuffle
        {
            get
            {
                return _Shuffle;
            }
            set
            {
                OnShuffleChanging(value);
                ReportPropertyChanging("Shuffle");
                _Shuffle = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Shuffle");
                OnShuffleChanged();
            }
        }
        private global::System.Boolean _Shuffle;
        partial void OnShuffleChanging(global::System.Boolean value);
        partial void OnShuffleChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "ChoiceQuestionChoiceItem", "ChoiceItem")]
        public EntityCollection<ChoiceItem> ChoiceItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChoiceItem>("DataModel.ChoiceQuestionChoiceItem", "ChoiceItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChoiceItem>("DataModel.ChoiceQuestionChoiceItem", "ChoiceItem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="Form")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Form : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Form object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="formTypeID">Initial value of the FormTypeID property.</param>
        /// <param name="authorID">Initial value of the AuthorID property.</param>
        /// <param name="formStateID">Initial value of the FormStateID property.</param>
        public static Form CreateForm(global::System.Int32 id, global::System.String name, global::System.DateTime created, global::System.Int32 formTypeID, global::System.Int32 authorID, global::System.Int32 formStateID)
        {
            Form form = new Form();
            form.ID = id;
            form.Name = name;
            form.Created = created;
            form.FormTypeID = formTypeID;
            form.AuthorID = authorID;
            form.FormStateID = formStateID;
            return form;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TimeToFill
        {
            get
            {
                return _TimeToFill;
            }
            set
            {
                OnTimeToFillChanging(value);
                ReportPropertyChanging("TimeToFill");
                _TimeToFill = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimeToFill");
                OnTimeToFillChanged();
            }
        }
        private Nullable<global::System.Int32> _TimeToFill;
        partial void OnTimeToFillChanging(Nullable<global::System.Int32> value);
        partial void OnTimeToFillChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Shuffle
        {
            get
            {
                return _Shuffle;
            }
            set
            {
                OnShuffleChanging(value);
                ReportPropertyChanging("Shuffle");
                _Shuffle = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Shuffle");
                OnShuffleChanged();
            }
        }
        private global::System.Boolean _Shuffle = false;
        partial void OnShuffleChanging(global::System.Boolean value);
        partial void OnShuffleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FormTypeID
        {
            get
            {
                return _FormTypeID;
            }
            set
            {
                OnFormTypeIDChanging(value);
                ReportPropertyChanging("FormTypeID");
                _FormTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FormTypeID");
                OnFormTypeIDChanged();
            }
        }
        private global::System.Int32 _FormTypeID;
        partial void OnFormTypeIDChanging(global::System.Int32 value);
        partial void OnFormTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AuthorID
        {
            get
            {
                return _AuthorID;
            }
            set
            {
                OnAuthorIDChanging(value);
                ReportPropertyChanging("AuthorID");
                _AuthorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AuthorID");
                OnAuthorIDChanged();
            }
        }
        private global::System.Int32 _AuthorID;
        partial void OnAuthorIDChanging(global::System.Int32 value);
        partial void OnAuthorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FormStateID
        {
            get
            {
                return _FormStateID;
            }
            set
            {
                OnFormStateIDChanging(value);
                ReportPropertyChanging("FormStateID");
                _FormStateID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FormStateID");
                OnFormStateIDChanged();
            }
        }
        private global::System.Int32 _FormStateID;
        partial void OnFormStateIDChanging(global::System.Int32 value);
        partial void OnFormStateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MaxFills
        {
            get
            {
                return _MaxFills;
            }
            set
            {
                OnMaxFillsChanging(value);
                ReportPropertyChanging("MaxFills");
                _MaxFills = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxFills");
                OnMaxFillsChanged();
            }
        }
        private Nullable<global::System.Int32> _MaxFills;
        partial void OnMaxFillsChanging(Nullable<global::System.Int32> value);
        partial void OnMaxFillsChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FormTemplateFormType", "FormType")]
        public FormType Type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormType>("DataModel.FormTemplateFormType", "FormType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormType>("DataModel.FormTemplateFormType", "FormType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FormType> TypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormType>("DataModel.FormTemplateFormType", "FormType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FormType>("DataModel.FormTemplateFormType", "FormType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FormTemplateAuthor", "User")]
        public User Author
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DataModel.FormTemplateAuthor", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DataModel.FormTemplateAuthor", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> AuthorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DataModel.FormTemplateAuthor", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DataModel.FormTemplateAuthor", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "QuestionGroupFormTemplate", "QuestionGroup")]
        public EntityCollection<QuestionGroup> QuestionGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<QuestionGroup>("DataModel.QuestionGroupFormTemplate", "QuestionGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<QuestionGroup>("DataModel.QuestionGroupFormTemplate", "QuestionGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FormInstanceFormTemplate", "FormInstance")]
        public EntityCollection<FormInstance> FormInstances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FormInstance>("DataModel.FormInstanceFormTemplate", "FormInstance");
            }
            private set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FormInstance>("DataModel.FormInstanceFormTemplate", "FormInstance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FormGroup", "Group")]
        public EntityCollection<Group> Groups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Group>("DataModel.FormGroup", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Group>("DataModel.FormGroup", "Group", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FormFormState", "FormState")]
        public FormState State
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormState>("DataModel.FormFormState", "FormState").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormState>("DataModel.FormFormState", "FormState").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FormState> StateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormState>("DataModel.FormFormState", "FormState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FormState>("DataModel.FormFormState", "FormState", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "GradeGroupForm", "GradeGroup")]
        public GradeGroup GradeGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GradeGroup>("DataModel.GradeGroupForm", "GradeGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GradeGroup>("DataModel.GradeGroupForm", "GradeGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GradeGroup> GradeGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GradeGroup>("DataModel.GradeGroupForm", "GradeGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GradeGroup>("DataModel.GradeGroupForm", "GradeGroup", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="FormInstance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FormInstance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FormInstance object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="submited">Initial value of the Submited property.</param>
        /// <param name="solverID">Initial value of the SolverID property.</param>
        /// <param name="formTemplateID">Initial value of the FormTemplateID property.</param>
        public static FormInstance CreateFormInstance(global::System.Int32 id, global::System.DateTime created, global::System.DateTime submited, global::System.Int32 solverID, global::System.Int32 formTemplateID)
        {
            FormInstance formInstance = new FormInstance();
            formInstance.ID = id;
            formInstance.Created = created;
            formInstance.Submited = submited;
            formInstance.SolverID = solverID;
            formInstance.FormTemplateID = formTemplateID;
            return formInstance;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Submited
        {
            get
            {
                return _Submited;
            }
            set
            {
                OnSubmitedChanging(value);
                ReportPropertyChanging("Submited");
                _Submited = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Submited");
                OnSubmitedChanged();
            }
        }
        private global::System.DateTime _Submited;
        partial void OnSubmitedChanging(global::System.DateTime value);
        partial void OnSubmitedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SolverID
        {
            get
            {
                return _SolverID;
            }
            set
            {
                OnSolverIDChanging(value);
                ReportPropertyChanging("SolverID");
                _SolverID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SolverID");
                OnSolverIDChanged();
            }
        }
        private global::System.Int32 _SolverID;
        partial void OnSolverIDChanging(global::System.Int32 value);
        partial void OnSolverIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FormTemplateID
        {
            get
            {
                return _FormTemplateID;
            }
            set
            {
                OnFormTemplateIDChanging(value);
                ReportPropertyChanging("FormTemplateID");
                _FormTemplateID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FormTemplateID");
                OnFormTemplateIDChanged();
            }
        }
        private global::System.Int32 _FormTemplateID;
        partial void OnFormTemplateIDChanging(global::System.Int32 value);
        partial void OnFormTemplateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EvaluationID
        {
            get
            {
                return _EvaluationID;
            }
            set
            {
                OnEvaluationIDChanging(value);
                ReportPropertyChanging("EvaluationID");
                _EvaluationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EvaluationID");
                OnEvaluationIDChanged();
            }
        }
        private Nullable<global::System.Int32> _EvaluationID;
        partial void OnEvaluationIDChanging(Nullable<global::System.Int32> value);
        partial void OnEvaluationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPreview
        {
            get
            {
                return _IsPreview;
            }
            set
            {
                OnIsPreviewChanging(value);
                ReportPropertyChanging("IsPreview");
                _IsPreview = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPreview");
                OnIsPreviewChanged();
            }
        }
        private global::System.Boolean _IsPreview = false;
        partial void OnIsPreviewChanging(global::System.Boolean value);
        partial void OnIsPreviewChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FormInstanceUser", "User")]
        public User Solver
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DataModel.FormInstanceUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DataModel.FormInstanceUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> SolverReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DataModel.FormInstanceUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DataModel.FormInstanceUser", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FormInstanceFormTemplate", "FormTemplate")]
        public Form FormTemplate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Form>("DataModel.FormInstanceFormTemplate", "FormTemplate").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Form>("DataModel.FormInstanceFormTemplate", "FormTemplate").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Form> FormTemplateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Form>("DataModel.FormInstanceFormTemplate", "FormTemplate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Form>("DataModel.FormInstanceFormTemplate", "FormTemplate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FormInstanceQuestionInstance", "QuestionInstance")]
        public EntityCollection<QuestionInstance> Questions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<QuestionInstance>("DataModel.FormInstanceQuestionInstance", "QuestionInstance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<QuestionInstance>("DataModel.FormInstanceQuestionInstance", "QuestionInstance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FormInstanceFormInstanceEvaluation", "FormInstanceEvaluation")]
        public FormInstanceEvaluation Evaluation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormInstanceEvaluation>("DataModel.FormInstanceFormInstanceEvaluation", "FormInstanceEvaluation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormInstanceEvaluation>("DataModel.FormInstanceFormInstanceEvaluation", "FormInstanceEvaluation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FormInstanceEvaluation> EvaluationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormInstanceEvaluation>("DataModel.FormInstanceFormInstanceEvaluation", "FormInstanceEvaluation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FormInstanceEvaluation>("DataModel.FormInstanceFormInstanceEvaluation", "FormInstanceEvaluation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="FormInstanceEvaluation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FormInstanceEvaluation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FormInstanceEvaluation object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="note">Initial value of the Note property.</param>
        public static FormInstanceEvaluation CreateFormInstanceEvaluation(global::System.Int32 id, global::System.String note)
        {
            FormInstanceEvaluation formInstanceEvaluation = new FormInstanceEvaluation();
            formInstanceEvaluation.ID = id;
            formInstanceEvaluation.Note = note;
            return formInstanceEvaluation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MarkValueID
        {
            get
            {
                return _MarkValueID;
            }
            set
            {
                OnMarkValueIDChanging(value);
                ReportPropertyChanging("MarkValueID");
                _MarkValueID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarkValueID");
                OnMarkValueIDChanged();
            }
        }
        private Nullable<global::System.Int32> _MarkValueID;
        partial void OnMarkValueIDChanging(Nullable<global::System.Int32> value);
        partial void OnMarkValueIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FormInstanceFormInstanceEvaluation", "FormInstance")]
        public FormInstance FormInstance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormInstance>("DataModel.FormInstanceFormInstanceEvaluation", "FormInstance").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormInstance>("DataModel.FormInstanceFormInstanceEvaluation", "FormInstance").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FormInstance> FormInstanceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormInstance>("DataModel.FormInstanceFormInstanceEvaluation", "FormInstance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FormInstance>("DataModel.FormInstanceFormInstanceEvaluation", "FormInstance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FormInstanceEvaluationMarkValue", "MarkValue")]
        public MarkValue Mark
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MarkValue>("DataModel.FormInstanceEvaluationMarkValue", "MarkValue").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MarkValue>("DataModel.FormInstanceEvaluationMarkValue", "MarkValue").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MarkValue> MarkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MarkValue>("DataModel.FormInstanceEvaluationMarkValue", "MarkValue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MarkValue>("DataModel.FormInstanceEvaluationMarkValue", "MarkValue", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="FormState")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FormState : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FormState object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static FormState CreateFormState(global::System.Int32 id, global::System.String name)
        {
            FormState formState = new FormState();
            formState.ID = id;
            formState.Name = name;
            return formState;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="FormType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FormType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FormType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static FormType CreateFormType(global::System.Int32 id, global::System.String name)
        {
            FormType formType = new FormType();
            formType.ID = id;
            formType.Name = name;
            return formType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="Grade")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Grade : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Grade object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static Grade CreateGrade(global::System.Int32 id, global::System.String name, global::System.String value)
        {
            Grade grade = new Grade();
            grade.ID = id;
            grade.Name = name;
            grade.Value = value;
            return grade;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "GradeGradeGroup", "GradeGroup")]
        public GradeGroup GradeGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GradeGroup>("DataModel.GradeGradeGroup", "GradeGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GradeGroup>("DataModel.GradeGradeGroup", "GradeGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GradeGroup> GradeGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GradeGroup>("DataModel.GradeGradeGroup", "GradeGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GradeGroup>("DataModel.GradeGradeGroup", "GradeGroup", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="GradeGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GradeGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GradeGroup object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static GradeGroup CreateGradeGroup(global::System.Int32 id)
        {
            GradeGroup gradeGroup = new GradeGroup();
            gradeGroup.ID = id;
            return gradeGroup;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "GradeGradeGroup", "Grade")]
        public EntityCollection<Grade> Grade
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Grade>("DataModel.GradeGradeGroup", "Grade");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Grade>("DataModel.GradeGradeGroup", "Grade", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "GradeGroupForm", "Form")]
        public Form Form
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Form>("DataModel.GradeGroupForm", "Form").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Form>("DataModel.GradeGroupForm", "Form").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Form> FormReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Form>("DataModel.GradeGroupForm", "Form");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Form>("DataModel.GradeGroupForm", "Form", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="Group")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Group : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Group object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="supervisorID">Initial value of the SupervisorID property.</param>
        public static Group CreateGroup(global::System.Int32 id, global::System.String name, global::System.Int32 supervisorID)
        {
            Group group = new Group();
            group.ID = id;
            group.Name = name;
            group.SupervisorID = supervisorID;
            return group;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SupervisorID
        {
            get
            {
                return _SupervisorID;
            }
            set
            {
                OnSupervisorIDChanging(value);
                ReportPropertyChanging("SupervisorID");
                _SupervisorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SupervisorID");
                OnSupervisorIDChanged();
            }
        }
        private global::System.Int32 _SupervisorID;
        partial void OnSupervisorIDChanging(global::System.Int32 value);
        partial void OnSupervisorIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "Supervisor", "User")]
        public User Supervisor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DataModel.Supervisor", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DataModel.Supervisor", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> SupervisorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DataModel.Supervisor", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DataModel.Supervisor", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "GroupMembers", "User")]
        public EntityCollection<User> Members
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("DataModel.GroupMembers", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("DataModel.GroupMembers", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FormGroup", "Form")]
        public EntityCollection<Form> Forms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Form>("DataModel.FormGroup", "Form");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Form>("DataModel.FormGroup", "Form", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "TextBookGroup", "TextBook")]
        public EntityCollection<TextBook> TextBooks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TextBook>("DataModel.TextBookGroup", "TextBook");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TextBook>("DataModel.TextBookGroup", "TextBook", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="MarkValue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MarkValue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MarkValue object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static MarkValue CreateMarkValue(global::System.Int32 id, global::System.String name)
        {
            MarkValue markValue = new MarkValue();
            markValue.ID = id;
            markValue.Name = name;
            return markValue;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="MultipleChoiceAnswer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MultipleChoiceAnswer : Answer
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MultipleChoiceAnswer object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static MultipleChoiceAnswer CreateMultipleChoiceAnswer(global::System.Int32 id)
        {
            MultipleChoiceAnswer multipleChoiceAnswer = new MultipleChoiceAnswer();
            multipleChoiceAnswer.ID = id;
            return multipleChoiceAnswer;
        }

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "MultipleChoiceAnswerMultipleChoiceAnswerItem", "MultipleChoiceAnswerItem")]
        public EntityCollection<MultipleChoiceAnswerItem> Items
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MultipleChoiceAnswerItem>("DataModel.MultipleChoiceAnswerMultipleChoiceAnswerItem", "MultipleChoiceAnswerItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MultipleChoiceAnswerItem>("DataModel.MultipleChoiceAnswerMultipleChoiceAnswerItem", "MultipleChoiceAnswerItem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="MultipleChoiceAnswerItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MultipleChoiceAnswerItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MultipleChoiceAnswerItem object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="multipleChoiceAnswerID">Initial value of the MultipleChoiceAnswerID property.</param>
        /// <param name="choiceItemID">Initial value of the ChoiceItemID property.</param>
        public static MultipleChoiceAnswerItem CreateMultipleChoiceAnswerItem(global::System.Int32 id, global::System.Int32 multipleChoiceAnswerID, global::System.Int32 choiceItemID)
        {
            MultipleChoiceAnswerItem multipleChoiceAnswerItem = new MultipleChoiceAnswerItem();
            multipleChoiceAnswerItem.ID = id;
            multipleChoiceAnswerItem.MultipleChoiceAnswerID = multipleChoiceAnswerID;
            multipleChoiceAnswerItem.ChoiceItemID = choiceItemID;
            return multipleChoiceAnswerItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MultipleChoiceAnswerID
        {
            get
            {
                return _MultipleChoiceAnswerID;
            }
            set
            {
                OnMultipleChoiceAnswerIDChanging(value);
                ReportPropertyChanging("MultipleChoiceAnswerID");
                _MultipleChoiceAnswerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MultipleChoiceAnswerID");
                OnMultipleChoiceAnswerIDChanged();
            }
        }
        private global::System.Int32 _MultipleChoiceAnswerID;
        partial void OnMultipleChoiceAnswerIDChanging(global::System.Int32 value);
        partial void OnMultipleChoiceAnswerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChoiceItemID
        {
            get
            {
                return _ChoiceItemID;
            }
            set
            {
                OnChoiceItemIDChanging(value);
                ReportPropertyChanging("ChoiceItemID");
                _ChoiceItemID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChoiceItemID");
                OnChoiceItemIDChanged();
            }
        }
        private global::System.Int32 _ChoiceItemID;
        partial void OnChoiceItemIDChanging(global::System.Int32 value);
        partial void OnChoiceItemIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "MultipleChoiceAnswerMultipleChoiceAnswerItem", "MultipleChoiceAnswer")]
        public MultipleChoiceAnswer ParentAnswer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MultipleChoiceAnswer>("DataModel.MultipleChoiceAnswerMultipleChoiceAnswerItem", "MultipleChoiceAnswer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MultipleChoiceAnswer>("DataModel.MultipleChoiceAnswerMultipleChoiceAnswerItem", "MultipleChoiceAnswer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MultipleChoiceAnswer> ParentAnswerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MultipleChoiceAnswer>("DataModel.MultipleChoiceAnswerMultipleChoiceAnswerItem", "MultipleChoiceAnswer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MultipleChoiceAnswer>("DataModel.MultipleChoiceAnswerMultipleChoiceAnswerItem", "MultipleChoiceAnswer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "MultipleChoiceAnswerItemChoiceItem", "ChoiceItem")]
        public ChoiceItem ChoiceItemTemplate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChoiceItem>("DataModel.MultipleChoiceAnswerItemChoiceItem", "ChoiceItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChoiceItem>("DataModel.MultipleChoiceAnswerItemChoiceItem", "ChoiceItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ChoiceItem> ChoiceItemTemplateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChoiceItem>("DataModel.MultipleChoiceAnswerItemChoiceItem", "ChoiceItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ChoiceItem>("DataModel.MultipleChoiceAnswerItemChoiceItem", "ChoiceItem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="Question")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(ChoiceQuestion))]
    [KnownTypeAttribute(typeof(ScaleQuestion))]
    public partial class Question : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Question object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="questionGroupID">Initial value of the QuestionGroupID property.</param>
        public static Question CreateQuestion(global::System.Int32 id, global::System.String text, global::System.Int32 questionGroupID)
        {
            Question question = new Question();
            question.ID = id;
            question.Text = text;
            question.QuestionGroupID = questionGroupID;
            return question;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HelpText
        {
            get
            {
                return _HelpText;
            }
            set
            {
                OnHelpTextChanging(value);
                ReportPropertyChanging("HelpText");
                _HelpText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HelpText");
                OnHelpTextChanged();
            }
        }
        private global::System.String _HelpText;
        partial void OnHelpTextChanging(global::System.String value);
        partial void OnHelpTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImageUrl
        {
            get
            {
                return _ImageUrl;
            }
            set
            {
                OnImageUrlChanging(value);
                ReportPropertyChanging("ImageUrl");
                _ImageUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImageUrl");
                OnImageUrlChanged();
            }
        }
        private global::System.String _ImageUrl;
        partial void OnImageUrlChanging(global::System.String value);
        partial void OnImageUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Explanation
        {
            get
            {
                return _Explanation;
            }
            set
            {
                OnExplanationChanging(value);
                ReportPropertyChanging("Explanation");
                _Explanation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Explanation");
                OnExplanationChanged();
            }
        }
        private global::System.String _Explanation;
        partial void OnExplanationChanging(global::System.String value);
        partial void OnExplanationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuestionGroupID
        {
            get
            {
                return _QuestionGroupID;
            }
            set
            {
                OnQuestionGroupIDChanging(value);
                ReportPropertyChanging("QuestionGroupID");
                _QuestionGroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QuestionGroupID");
                OnQuestionGroupIDChanged();
            }
        }
        private global::System.Int32 _QuestionGroupID;
        partial void OnQuestionGroupIDChanging(global::System.Int32 value);
        partial void OnQuestionGroupIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "QuestionGroupQuestion", "QuestionGroup")]
        public QuestionGroup QuestionGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuestionGroup>("DataModel.QuestionGroupQuestion", "QuestionGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuestionGroup>("DataModel.QuestionGroupQuestion", "QuestionGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<QuestionGroup> QuestionGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuestionGroup>("DataModel.QuestionGroupQuestion", "QuestionGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<QuestionGroup>("DataModel.QuestionGroupQuestion", "QuestionGroup", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="QuestionGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class QuestionGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new QuestionGroup object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="index">Initial value of the Index property.</param>
        /// <param name="questionGroupTypeID">Initial value of the QuestionGroupTypeID property.</param>
        /// <param name="formTemplateID">Initial value of the FormTemplateID property.</param>
        public static QuestionGroup CreateQuestionGroup(global::System.Int32 id, global::System.Int32 index, global::System.Int32 questionGroupTypeID, global::System.Int32 formTemplateID)
        {
            QuestionGroup questionGroup = new QuestionGroup();
            questionGroup.ID = id;
            questionGroup.Index = index;
            questionGroup.QuestionGroupTypeID = questionGroupTypeID;
            questionGroup.FormTemplateID = formTemplateID;
            return questionGroup;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Index
        {
            get
            {
                return _Index;
            }
            set
            {
                OnIndexChanging(value);
                ReportPropertyChanging("Index");
                _Index = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Index");
                OnIndexChanged();
            }
        }
        private global::System.Int32 _Index;
        partial void OnIndexChanging(global::System.Int32 value);
        partial void OnIndexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsRequired
        {
            get
            {
                return _IsRequired;
            }
            set
            {
                OnIsRequiredChanging(value);
                ReportPropertyChanging("IsRequired");
                _IsRequired = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsRequired");
                OnIsRequiredChanged();
            }
        }
        private global::System.Boolean _IsRequired = false;
        partial void OnIsRequiredChanging(global::System.Boolean value);
        partial void OnIsRequiredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuestionGroupTypeID
        {
            get
            {
                return _QuestionGroupTypeID;
            }
            set
            {
                OnQuestionGroupTypeIDChanging(value);
                ReportPropertyChanging("QuestionGroupTypeID");
                _QuestionGroupTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QuestionGroupTypeID");
                OnQuestionGroupTypeIDChanged();
            }
        }
        private global::System.Int32 _QuestionGroupTypeID;
        partial void OnQuestionGroupTypeIDChanging(global::System.Int32 value);
        partial void OnQuestionGroupTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FormTemplateID
        {
            get
            {
                return _FormTemplateID;
            }
            set
            {
                OnFormTemplateIDChanging(value);
                ReportPropertyChanging("FormTemplateID");
                _FormTemplateID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FormTemplateID");
                OnFormTemplateIDChanged();
            }
        }
        private global::System.Int32 _FormTemplateID;
        partial void OnFormTemplateIDChanging(global::System.Int32 value);
        partial void OnFormTemplateIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "QuestionGroupQuestion", "Question")]
        public EntityCollection<Question> Questions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Question>("DataModel.QuestionGroupQuestion", "Question");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Question>("DataModel.QuestionGroupQuestion", "Question", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "QuestionGroupQuestionGroupType", "QuestionGroupType")]
        public QuestionGroupType Type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuestionGroupType>("DataModel.QuestionGroupQuestionGroupType", "QuestionGroupType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuestionGroupType>("DataModel.QuestionGroupQuestionGroupType", "QuestionGroupType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<QuestionGroupType> TypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuestionGroupType>("DataModel.QuestionGroupQuestionGroupType", "QuestionGroupType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<QuestionGroupType>("DataModel.QuestionGroupQuestionGroupType", "QuestionGroupType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "QuestionGroupFormTemplate", "FormTemplate")]
        public Form ParentForm
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Form>("DataModel.QuestionGroupFormTemplate", "FormTemplate").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Form>("DataModel.QuestionGroupFormTemplate", "FormTemplate").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Form> ParentFormReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Form>("DataModel.QuestionGroupFormTemplate", "FormTemplate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Form>("DataModel.QuestionGroupFormTemplate", "FormTemplate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "TextBookLinkQuestionGroup", "TextBookLink")]
        public EntityCollection<TextBookLink> TextBookLink
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TextBookLink>("DataModel.TextBookLinkQuestionGroup", "TextBookLink");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TextBookLink>("DataModel.TextBookLinkQuestionGroup", "TextBookLink", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="QuestionGroupType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class QuestionGroupType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new QuestionGroupType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static QuestionGroupType CreateQuestionGroupType(global::System.Int32 id, global::System.String name)
        {
            QuestionGroupType questionGroupType = new QuestionGroupType();
            questionGroupType.ID = id;
            questionGroupType.Name = name;
            return questionGroupType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="QuestionInstance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class QuestionInstance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new QuestionInstance object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="index">Initial value of the Index property.</param>
        /// <param name="questionID">Initial value of the QuestionID property.</param>
        /// <param name="formInstanceID">Initial value of the FormInstanceID property.</param>
        public static QuestionInstance CreateQuestionInstance(global::System.Int32 id, global::System.Int32 index, global::System.Int32 questionID, global::System.Int32 formInstanceID)
        {
            QuestionInstance questionInstance = new QuestionInstance();
            questionInstance.ID = id;
            questionInstance.Index = index;
            questionInstance.QuestionID = questionID;
            questionInstance.FormInstanceID = formInstanceID;
            return questionInstance;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Index
        {
            get
            {
                return _Index;
            }
            set
            {
                OnIndexChanging(value);
                ReportPropertyChanging("Index");
                _Index = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Index");
                OnIndexChanged();
            }
        }
        private global::System.Int32 _Index;
        partial void OnIndexChanging(global::System.Int32 value);
        partial void OnIndexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuestionID
        {
            get
            {
                return _QuestionID;
            }
            set
            {
                OnQuestionIDChanging(value);
                ReportPropertyChanging("QuestionID");
                _QuestionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QuestionID");
                OnQuestionIDChanged();
            }
        }
        private global::System.Int32 _QuestionID;
        partial void OnQuestionIDChanging(global::System.Int32 value);
        partial void OnQuestionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FormInstanceID
        {
            get
            {
                return _FormInstanceID;
            }
            set
            {
                OnFormInstanceIDChanging(value);
                ReportPropertyChanging("FormInstanceID");
                _FormInstanceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FormInstanceID");
                OnFormInstanceIDChanged();
            }
        }
        private global::System.Int32 _FormInstanceID;
        partial void OnFormInstanceIDChanging(global::System.Int32 value);
        partial void OnFormInstanceIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "QuestionInstanceQuestionTemplate", "Question")]
        public Question QuestionTemplate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("DataModel.QuestionInstanceQuestionTemplate", "Question").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("DataModel.QuestionInstanceQuestionTemplate", "Question").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Question> QuestionTemplateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("DataModel.QuestionInstanceQuestionTemplate", "Question");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Question>("DataModel.QuestionInstanceQuestionTemplate", "Question", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FormInstanceQuestionInstance", "FormInstance")]
        public FormInstance ParentForm
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormInstance>("DataModel.FormInstanceQuestionInstance", "FormInstance").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormInstance>("DataModel.FormInstanceQuestionInstance", "FormInstance").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FormInstance> ParentFormReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormInstance>("DataModel.FormInstanceQuestionInstance", "FormInstance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FormInstance>("DataModel.FormInstanceQuestionInstance", "FormInstance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "QuestionInstanceAnswer", "Answer")]
        public Answer Answer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Answer>("DataModel.QuestionInstanceAnswer", "Answer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Answer>("DataModel.QuestionInstanceAnswer", "Answer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Answer> AnswerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Answer>("DataModel.QuestionInstanceAnswer", "Answer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Answer>("DataModel.QuestionInstanceAnswer", "Answer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="ScaleAnswer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ScaleAnswer : Answer
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ScaleAnswer object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static ScaleAnswer CreateScaleAnswer(global::System.Int32 id, global::System.Int32 value)
        {
            ScaleAnswer scaleAnswer = new ScaleAnswer();
            scaleAnswer.ID = id;
            scaleAnswer.Value = value;
            return scaleAnswer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Int32 _Value;
        partial void OnValueChanging(global::System.Int32 value);
        partial void OnValueChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="ScaleQuestion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ScaleQuestion : Question
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ScaleQuestion object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="questionGroupID">Initial value of the QuestionGroupID property.</param>
        /// <param name="minValue">Initial value of the MinValue property.</param>
        /// <param name="minValueText">Initial value of the MinValueText property.</param>
        /// <param name="maxValue">Initial value of the MaxValue property.</param>
        /// <param name="maxValueText">Initial value of the MaxValueText property.</param>
        /// <param name="increment">Initial value of the Increment property.</param>
        public static ScaleQuestion CreateScaleQuestion(global::System.Int32 id, global::System.String text, global::System.Int32 questionGroupID, global::System.Int32 minValue, global::System.String minValueText, global::System.Int32 maxValue, global::System.String maxValueText, global::System.Int32 increment)
        {
            ScaleQuestion scaleQuestion = new ScaleQuestion();
            scaleQuestion.ID = id;
            scaleQuestion.Text = text;
            scaleQuestion.QuestionGroupID = questionGroupID;
            scaleQuestion.MinValue = minValue;
            scaleQuestion.MinValueText = minValueText;
            scaleQuestion.MaxValue = maxValue;
            scaleQuestion.MaxValueText = maxValueText;
            scaleQuestion.Increment = increment;
            return scaleQuestion;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MinValue
        {
            get
            {
                return _MinValue;
            }
            set
            {
                OnMinValueChanging(value);
                ReportPropertyChanging("MinValue");
                _MinValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MinValue");
                OnMinValueChanged();
            }
        }
        private global::System.Int32 _MinValue;
        partial void OnMinValueChanging(global::System.Int32 value);
        partial void OnMinValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MinValueText
        {
            get
            {
                return _MinValueText;
            }
            set
            {
                OnMinValueTextChanging(value);
                ReportPropertyChanging("MinValueText");
                _MinValueText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MinValueText");
                OnMinValueTextChanged();
            }
        }
        private global::System.String _MinValueText;
        partial void OnMinValueTextChanging(global::System.String value);
        partial void OnMinValueTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaxValue
        {
            get
            {
                return _MaxValue;
            }
            set
            {
                OnMaxValueChanging(value);
                ReportPropertyChanging("MaxValue");
                _MaxValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxValue");
                OnMaxValueChanged();
            }
        }
        private global::System.Int32 _MaxValue;
        partial void OnMaxValueChanging(global::System.Int32 value);
        partial void OnMaxValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MaxValueText
        {
            get
            {
                return _MaxValueText;
            }
            set
            {
                OnMaxValueTextChanging(value);
                ReportPropertyChanging("MaxValueText");
                _MaxValueText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MaxValueText");
                OnMaxValueTextChanged();
            }
        }
        private global::System.String _MaxValueText;
        partial void OnMaxValueTextChanging(global::System.String value);
        partial void OnMaxValueTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Increment
        {
            get
            {
                return _Increment;
            }
            set
            {
                OnIncrementChanging(value);
                ReportPropertyChanging("Increment");
                _Increment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Increment");
                OnIncrementChanged();
            }
        }
        private global::System.Int32 _Increment;
        partial void OnIncrementChanging(global::System.Int32 value);
        partial void OnIncrementChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="TextAnswer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TextAnswer : Answer
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TextAnswer object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        public static TextAnswer CreateTextAnswer(global::System.Int32 id, global::System.String text)
        {
            TextAnswer textAnswer = new TextAnswer();
            textAnswer.ID = id;
            textAnswer.Text = text;
            return textAnswer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="TextBook")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TextBook : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TextBook object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="changed">Initial value of the Changed property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="createdByID">Initial value of the CreatedByID property.</param>
        /// <param name="changedByID">Initial value of the ChangedByID property.</param>
        /// <param name="html">Initial value of the Html property.</param>
        public static TextBook CreateTextBook(global::System.Int32 id, global::System.DateTime created, global::System.DateTime changed, global::System.String title, global::System.String text, global::System.Int32 createdByID, global::System.Int32 changedByID, global::System.String html)
        {
            TextBook textBook = new TextBook();
            textBook.ID = id;
            textBook.Created = created;
            textBook.Changed = changed;
            textBook.Title = title;
            textBook.Text = text;
            textBook.CreatedByID = createdByID;
            textBook.ChangedByID = changedByID;
            textBook.Html = html;
            return textBook;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Changed
        {
            get
            {
                return _Changed;
            }
            set
            {
                OnChangedChanging(value);
                ReportPropertyChanging("Changed");
                _Changed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Changed");
                OnChangedChanged();
            }
        }
        private global::System.DateTime _Changed;
        partial void OnChangedChanging(global::System.DateTime value);
        partial void OnChangedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedByID
        {
            get
            {
                return _CreatedByID;
            }
            set
            {
                OnCreatedByIDChanging(value);
                ReportPropertyChanging("CreatedByID");
                _CreatedByID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByID");
                OnCreatedByIDChanged();
            }
        }
        private global::System.Int32 _CreatedByID;
        partial void OnCreatedByIDChanging(global::System.Int32 value);
        partial void OnCreatedByIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChangedByID
        {
            get
            {
                return _ChangedByID;
            }
            set
            {
                OnChangedByIDChanging(value);
                ReportPropertyChanging("ChangedByID");
                _ChangedByID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangedByID");
                OnChangedByIDChanged();
            }
        }
        private global::System.Int32 _ChangedByID;
        partial void OnChangedByIDChanging(global::System.Int32 value);
        partial void OnChangedByIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean VisibleToOthers
        {
            get
            {
                return _VisibleToOthers;
            }
            set
            {
                OnVisibleToOthersChanging(value);
                ReportPropertyChanging("VisibleToOthers");
                _VisibleToOthers = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VisibleToOthers");
                OnVisibleToOthersChanged();
            }
        }
        private global::System.Boolean _VisibleToOthers = false;
        partial void OnVisibleToOthersChanging(global::System.Boolean value);
        partial void OnVisibleToOthersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Html
        {
            get
            {
                return _Html;
            }
            set
            {
                OnHtmlChanging(value);
                ReportPropertyChanging("Html");
                _Html = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Html");
                OnHtmlChanged();
            }
        }
        private global::System.String _Html;
        partial void OnHtmlChanging(global::System.String value);
        partial void OnHtmlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsArchived
        {
            get
            {
                return _IsArchived;
            }
            set
            {
                OnIsArchivedChanging(value);
                ReportPropertyChanging("IsArchived");
                _IsArchived = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsArchived");
                OnIsArchivedChanged();
            }
        }
        private global::System.Boolean _IsArchived = false;
        partial void OnIsArchivedChanging(global::System.Boolean value);
        partial void OnIsArchivedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "TextBookUserCreator", "User")]
        public User CreatedBy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DataModel.TextBookUserCreator", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DataModel.TextBookUserCreator", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> CreatedByReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DataModel.TextBookUserCreator", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DataModel.TextBookUserCreator", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "TextBookUserChanger", "User")]
        public User ChangedBy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DataModel.TextBookUserChanger", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DataModel.TextBookUserChanger", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> ChangedByReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DataModel.TextBookUserChanger", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DataModel.TextBookUserChanger", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "TextBookGroup", "Group")]
        public EntityCollection<Group> Groups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Group>("DataModel.TextBookGroup", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Group>("DataModel.TextBookGroup", "Group", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "TextBookTextBookLink", "TextBookLink")]
        public EntityCollection<TextBookLink> TextBookLink
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TextBookLink>("DataModel.TextBookTextBookLink", "TextBookLink");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TextBookLink>("DataModel.TextBookTextBookLink", "TextBookLink", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="TextBookLink")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TextBookLink : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TextBookLink object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="hName">Initial value of the HName property.</param>
        /// <param name="textBookID">Initial value of the TextBookID property.</param>
        /// <param name="questionID">Initial value of the QuestionID property.</param>
        public static TextBookLink CreateTextBookLink(global::System.Int32 id, global::System.String hName, global::System.Int32 textBookID, global::System.Int32 questionID)
        {
            TextBookLink textBookLink = new TextBookLink();
            textBookLink.ID = id;
            textBookLink.HName = hName;
            textBookLink.TextBookID = textBookID;
            textBookLink.QuestionID = questionID;
            return textBookLink;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HName
        {
            get
            {
                return _HName;
            }
            set
            {
                OnHNameChanging(value);
                ReportPropertyChanging("HName");
                _HName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HName");
                OnHNameChanged();
            }
        }
        private global::System.String _HName;
        partial void OnHNameChanging(global::System.String value);
        partial void OnHNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TextBookID
        {
            get
            {
                return _TextBookID;
            }
            set
            {
                OnTextBookIDChanging(value);
                ReportPropertyChanging("TextBookID");
                _TextBookID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TextBookID");
                OnTextBookIDChanged();
            }
        }
        private global::System.Int32 _TextBookID;
        partial void OnTextBookIDChanging(global::System.Int32 value);
        partial void OnTextBookIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuestionID
        {
            get
            {
                return _QuestionID;
            }
            set
            {
                OnQuestionIDChanging(value);
                ReportPropertyChanging("QuestionID");
                _QuestionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QuestionID");
                OnQuestionIDChanged();
            }
        }
        private global::System.Int32 _QuestionID;
        partial void OnQuestionIDChanging(global::System.Int32 value);
        partial void OnQuestionIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "TextBookTextBookLink", "TextBook")]
        public TextBook TextBook
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TextBook>("DataModel.TextBookTextBookLink", "TextBook").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TextBook>("DataModel.TextBookTextBookLink", "TextBook").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TextBook> TextBookReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TextBook>("DataModel.TextBookTextBookLink", "TextBook");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TextBook>("DataModel.TextBookTextBookLink", "TextBook", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "TextBookLinkQuestionGroup", "QuestionGroup")]
        public QuestionGroup QuestionGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuestionGroup>("DataModel.TextBookLinkQuestionGroup", "QuestionGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuestionGroup>("DataModel.TextBookLinkQuestionGroup", "QuestionGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<QuestionGroup> QuestionGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuestionGroup>("DataModel.TextBookLinkQuestionGroup", "QuestionGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<QuestionGroup>("DataModel.TextBookLinkQuestionGroup", "QuestionGroup", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="userTypeID">Initial value of the UserTypeID property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String email, global::System.Int32 userTypeID, global::System.Boolean isActive)
        {
            User user = new User();
            user.ID = id;
            user.Email = email;
            user.UserTypeID = userTypeID;
            user.IsActive = isActive;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserTypeID
        {
            get
            {
                return _UserTypeID;
            }
            set
            {
                OnUserTypeIDChanging(value);
                ReportPropertyChanging("UserTypeID");
                _UserTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserTypeID");
                OnUserTypeIDChanged();
            }
        }
        private global::System.Int32 _UserTypeID;
        partial void OnUserTypeIDChanging(global::System.Int32 value);
        partial void OnUserTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FillingForm
        {
            get
            {
                return _FillingForm;
            }
            set
            {
                OnFillingFormChanging(value);
                ReportPropertyChanging("FillingForm");
                _FillingForm = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FillingForm");
                OnFillingFormChanged();
            }
        }
        private Nullable<global::System.Int32> _FillingForm;
        partial void OnFillingFormChanging(Nullable<global::System.Int32> value);
        partial void OnFillingFormChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "GroupMembers", "Group")]
        public EntityCollection<Group> Groups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Group>("DataModel.GroupMembers", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Group>("DataModel.GroupMembers", "Group", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "UserUserType", "UserType")]
        public UserType Type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserType>("DataModel.UserUserType", "UserType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserType>("DataModel.UserUserType", "UserType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserType> TypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserType>("DataModel.UserUserType", "UserType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserType>("DataModel.UserUserType", "UserType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FormInstanceUser", "FormInstance")]
        public EntityCollection<FormInstance> SolvedForms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FormInstance>("DataModel.FormInstanceUser", "FormInstance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FormInstance>("DataModel.FormInstanceUser", "FormInstance", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="UserType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static UserType CreateUserType(global::System.Int32 id, global::System.String name)
        {
            UserType userType = new UserType();
            userType.ID = id;
            userType.Name = name;
            return userType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
    }

    #endregion

    
}
