@model ELearning.Models.Data.FormInstanceModel
@{
    Layout = "";
}
<html>
<head>
    <title>Prohlížení testu</title>
    <link href="@Url.Content("~/Content/Site.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/Scripts/jquery-1.5.1.min.js")" type="text/javascript"></script>
    <link href="@Url.Content("~/Content/favicon.png")" rel="shortcut icon" />
    <link href="@Url.Content("~/Content/favicon.png")" rel="icon" type="image/png" />
</head>
<body>
    <div id="FormFill">
        <div id="FormFillHeader">
            <h2>@Model.FormTemplate.Name</h2>
        </div>
        @using (Html.BeginForm("", ""))
        {
            int i = 1;
            ViewData.Add("Readonly", new Nullable<bool>(true));
            foreach (var question in Model.Questions)
            {
            <div class="Question">
                <fieldset>
                    <legend>Question #@i</legend>
                    <div class="Header">
                        <h3>
                            Question #@i</h3>
                    </div>
                    <div class="Content">
                        <div class="QuestionText">
                            @Html.Partial("Questions\\_QuestionHeader", question)
                        </div>
                        <div class="QuestionAnswer">
                            @Html.Partial(string.Format("Questions\\_FillQuestion_{0}", question.TemplateGroup.Type.Name), question)
                        </div>
                    </div>
                </fieldset>
            </div>
                i++;
            }
            <div id="FormFillFooter">
                <input class="Button" type="button" title="Close this window" value="Close" onclick="window.close()" />
            </div>
        }
    </div>
    @{
        bool evaluated = Model.Evaluation != null;
    }
    @if (evaluated || ViewBag.CurrentUserModel.Type != ELearning.Data.Enums.UserTypes.Student)
    {
        <div id="FormEvaluation">
            @using (Html.BeginForm("Evaluate", "FormInstance", new { id = Model.ID }))
            {
                @Html.ValidationSummary(true)
                <fieldset>
                    @if (ViewBag.CurrentUserModel.Type == ELearning.Data.Enums.UserTypes.Student)
                    {
                        <h3>
                            @Html.Raw(Model.Evaluation.Mark.Name)
                        </h3>
                        <p>Note</p>
                            
                        @Html.Raw(Model.Evaluation.Note)
                    }
                    else
                    {
                        if (!evaluated)
                        {
                            Model.Evaluation = new ELearning.Models.Data.FormInstanceEvaluationModel();
                        }
                        bool markSpecified = Model.Evaluation.Mark != null;
                        if (!markSpecified)
                        {
                            Model.Evaluation.Mark = new ELearning.Models.Data.MarkValueModel();
                        }


                        var markValuesAttrs = new Dictionary<string, object>();
                        markValuesAttrs.Add("id", "markValues");
                        <label for="markValues">
                            Mark</label>
                        @Html.DropDownListFor(
                        id => Model.Evaluation.Mark.ID,
                        new SelectList(((ICollection<ELearning.Models.Data.MarkValueModel>)ViewBag.MarkValues), "ID", "Name", markSpecified ? Model.Evaluation.Mark.ID : ViewBag.DefaultMark),
                        markValuesAttrs
                        )
                    
                        @Html.LabelFor(n => Model.Evaluation.Note)
                        @Html.EditorFor(n => Model.Evaluation.Note)

                        if (!evaluated)
                        {
                        <input type="submit" class="Button" value="Evaluate" />
                        }
                        else
                        {
                        <input type="submit" class="Button" value="Change evaluation" />
                        }
                    }
                </fieldset>
            }
        </div>
    }
</body>
</html>
