//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("DataModel", "QuestionGroupQuestion", "QuestionGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ELearning.Data.QuestionGroup), "Question", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ELearning.Data.Question), true)]
[assembly: EdmRelationshipAttribute("DataModel", "QuestionGroupQuestionGroupType", "QuestionGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ELearning.Data.QuestionGroup), "QuestionGroupType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ELearning.Data.QuestionGroupType), true)]

#endregion

namespace ELearning.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DataModelContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DataModelContainer object using the connection string found in the 'DataModelContainer' section of the application configuration file.
        /// </summary>
        public DataModelContainer() : base("name=DataModelContainer", "DataModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DataModelContainer object.
        /// </summary>
        public DataModelContainer(string connectionString) : base(connectionString, "DataModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DataModelContainer object.
        /// </summary>
        public DataModelContainer(EntityConnection connection) : base(connection, "DataModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Question> Question
        {
            get
            {
                if ((_Question == null))
                {
                    _Question = base.CreateObjectSet<Question>("Question");
                }
                return _Question;
            }
        }
        private ObjectSet<Question> _Question;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<QuestionGroup> QuestionGroup
        {
            get
            {
                if ((_QuestionGroup == null))
                {
                    _QuestionGroup = base.CreateObjectSet<QuestionGroup>("QuestionGroup");
                }
                return _QuestionGroup;
            }
        }
        private ObjectSet<QuestionGroup> _QuestionGroup;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<QuestionGroupType> QuestionGroupType
        {
            get
            {
                if ((_QuestionGroupType == null))
                {
                    _QuestionGroupType = base.CreateObjectSet<QuestionGroupType>("QuestionGroupType");
                }
                return _QuestionGroupType;
            }
        }
        private ObjectSet<QuestionGroupType> _QuestionGroupType;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Question EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuestion(Question question)
        {
            base.AddObject("Question", question);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the QuestionGroup EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuestionGroup(QuestionGroup questionGroup)
        {
            base.AddObject("QuestionGroup", questionGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the QuestionGroupType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuestionGroupType(QuestionGroupType questionGroupType)
        {
            base.AddObject("QuestionGroupType", questionGroupType);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="Question")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Question : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Question object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="questionGroupID">Initial value of the QuestionGroupID property.</param>
        public static Question CreateQuestion(global::System.Int32 id, global::System.String text, global::System.Int32 questionGroupID)
        {
            Question question = new Question();
            question.ID = id;
            question.Text = text;
            question.QuestionGroupID = questionGroupID;
            return question;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HelpText
        {
            get
            {
                return _HelpText;
            }
            set
            {
                OnHelpTextChanging(value);
                ReportPropertyChanging("HelpText");
                _HelpText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HelpText");
                OnHelpTextChanged();
            }
        }
        private global::System.String _HelpText;
        partial void OnHelpTextChanging(global::System.String value);
        partial void OnHelpTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImageUrl
        {
            get
            {
                return _ImageUrl;
            }
            set
            {
                OnImageUrlChanging(value);
                ReportPropertyChanging("ImageUrl");
                _ImageUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImageUrl");
                OnImageUrlChanged();
            }
        }
        private global::System.String _ImageUrl;
        partial void OnImageUrlChanging(global::System.String value);
        partial void OnImageUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Explanation
        {
            get
            {
                return _Explanation;
            }
            set
            {
                OnExplanationChanging(value);
                ReportPropertyChanging("Explanation");
                _Explanation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Explanation");
                OnExplanationChanged();
            }
        }
        private global::System.String _Explanation;
        partial void OnExplanationChanging(global::System.String value);
        partial void OnExplanationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuestionGroupID
        {
            get
            {
                return _QuestionGroupID;
            }
            set
            {
                OnQuestionGroupIDChanging(value);
                ReportPropertyChanging("QuestionGroupID");
                _QuestionGroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QuestionGroupID");
                OnQuestionGroupIDChanged();
            }
        }
        private global::System.Int32 _QuestionGroupID;
        partial void OnQuestionGroupIDChanging(global::System.Int32 value);
        partial void OnQuestionGroupIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "QuestionGroupQuestion", "QuestionGroup")]
        public QuestionGroup QuestionGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuestionGroup>("DataModel.QuestionGroupQuestion", "QuestionGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuestionGroup>("DataModel.QuestionGroupQuestion", "QuestionGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<QuestionGroup> QuestionGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuestionGroup>("DataModel.QuestionGroupQuestion", "QuestionGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<QuestionGroup>("DataModel.QuestionGroupQuestion", "QuestionGroup", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="QuestionGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class QuestionGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new QuestionGroup object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="index">Initial value of the Index property.</param>
        /// <param name="questionGroupTypeID">Initial value of the QuestionGroupTypeID property.</param>
        public static QuestionGroup CreateQuestionGroup(global::System.Int32 id, global::System.Int32 index, global::System.Int32 questionGroupTypeID)
        {
            QuestionGroup questionGroup = new QuestionGroup();
            questionGroup.ID = id;
            questionGroup.Index = index;
            questionGroup.QuestionGroupTypeID = questionGroupTypeID;
            return questionGroup;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Index
        {
            get
            {
                return _Index;
            }
            set
            {
                OnIndexChanging(value);
                ReportPropertyChanging("Index");
                _Index = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Index");
                OnIndexChanged();
            }
        }
        private global::System.Int32 _Index;
        partial void OnIndexChanging(global::System.Int32 value);
        partial void OnIndexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsRequired
        {
            get
            {
                return _IsRequired;
            }
            set
            {
                OnIsRequiredChanging(value);
                ReportPropertyChanging("IsRequired");
                _IsRequired = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsRequired");
                OnIsRequiredChanged();
            }
        }
        private global::System.Boolean _IsRequired = false;
        partial void OnIsRequiredChanging(global::System.Boolean value);
        partial void OnIsRequiredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuestionGroupTypeID
        {
            get
            {
                return _QuestionGroupTypeID;
            }
            set
            {
                OnQuestionGroupTypeIDChanging(value);
                ReportPropertyChanging("QuestionGroupTypeID");
                _QuestionGroupTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QuestionGroupTypeID");
                OnQuestionGroupTypeIDChanged();
            }
        }
        private global::System.Int32 _QuestionGroupTypeID;
        partial void OnQuestionGroupTypeIDChanging(global::System.Int32 value);
        partial void OnQuestionGroupTypeIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "QuestionGroupQuestion", "Question")]
        public EntityCollection<Question> Question
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Question>("DataModel.QuestionGroupQuestion", "Question");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Question>("DataModel.QuestionGroupQuestion", "Question", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "QuestionGroupQuestionGroupType", "QuestionGroupType")]
        public QuestionGroupType QuestionGroupType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuestionGroupType>("DataModel.QuestionGroupQuestionGroupType", "QuestionGroupType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuestionGroupType>("DataModel.QuestionGroupQuestionGroupType", "QuestionGroupType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<QuestionGroupType> QuestionGroupTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuestionGroupType>("DataModel.QuestionGroupQuestionGroupType", "QuestionGroupType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<QuestionGroupType>("DataModel.QuestionGroupQuestionGroupType", "QuestionGroupType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="QuestionGroupType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class QuestionGroupType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new QuestionGroupType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static QuestionGroupType CreateQuestionGroupType(global::System.Int32 id, global::System.String name)
        {
            QuestionGroupType questionGroupType = new QuestionGroupType();
            questionGroupType.ID = id;
            questionGroupType.Name = name;
            return questionGroupType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
    }

    #endregion
    
}
